%% coding: utf-8
{script,
    {"drinkly_linux","0.1.0"},
    [{preLoaded,
         [atomics,counters,erl_init,erl_prim_loader,erl_tracer,erlang,
          erts_code_purger,erts_dirty_process_signal_handler,erts_internal,
          erts_literal_area_collector,init,net,persistent_term,prim_buffer,
          prim_eval,prim_file,prim_inet,prim_zip,socket,zlib]},
     {progress,preloaded},
     {path,["$ROOT/lib/kernel-6.4/ebin","$ROOT/lib/stdlib-3.9/ebin"]},
     {primLoad,
         [error_handler,application,application_controller,application_master,
          code,code_server,erl_eval,erl_lint,erl_parse,error_logger,ets,file,
          filename,file_server,file_io_server,gen,gen_event,gen_server,heart,
          kernel,logger,logger_filters,logger_server,logger_backend,
          logger_config,logger_simple_h,lists,proc_lib,supervisor]},
     {kernel_load_completed},
     {progress,kernel_load_completed},
     {path,["$ROOT/lib/kernel-6.4/ebin"]},
     {primLoad,
         [application_starter,auth,disk_log,disk_log_1,disk_log_server,
          disk_log_sup,dist_ac,dist_util,erl_boot_server,erl_ddll,
          erl_distribution,erl_epmd,erl_reply,erl_signal_handler,erts_debug,
          gen_sctp,gen_tcp,gen_udp,global,global_group,global_search,group,
          group_history,hipe_unified_loader,inet,inet6_sctp,inet6_tcp,
          inet6_tcp_dist,inet6_udp,inet_config,inet_db,inet_dns,
          inet_gethost_native,inet_hosts,inet_parse,inet_res,inet_sctp,
          inet_tcp,inet_tcp_dist,inet_udp,kernel_config,kernel_refc,local_tcp,
          local_udp,logger_disk_log_h,logger_formatter,logger_h_common,
          logger_handler_watcher,logger_olp,logger_proxy,logger_std_h,
          logger_sup,net_adm,net_kernel,os,pg2,ram_file,raw_file_io,
          raw_file_io_compressed,raw_file_io_deflate,raw_file_io_delayed,
          raw_file_io_inflate,raw_file_io_list,raw_file_io_raw,rpc,seq_trace,
          standard_error,user,user_drv,user_sup,wrap_log_reader]},
     {path,["$ROOT/lib/stdlib-3.9/ebin"]},
     {primLoad,
         [array,base64,beam_lib,binary,c,calendar,dets,dets_server,dets_sup,
          dets_utils,dets_v9,dict,digraph,digraph_utils,edlin,edlin_expand,
          epp,erl_abstract_code,erl_anno,erl_bits,erl_compile,erl_error,
          erl_expand_records,erl_internal,erl_posix_msg,erl_pp,erl_scan,
          erl_tar,error_logger_file_h,error_logger_tty_h,escript,eval_bits,
          file_sorter,filelib,gb_sets,gb_trees,gen_fsm,gen_statem,io,io_lib,
          io_lib_format,io_lib_fread,io_lib_pretty,log_mf_h,maps,math,
          ms_transform,orddict,ordsets,otp_internal,pool,proplists,qlc,qlc_pt,
          queue,rand,random,re,sets,shell,shell_default,slave,sofs,string,
          supervisor_bridge,sys,timer,unicode,unicode_util,uri_string,
          win32reg,zip]},
     {path,["$ROOT/lib/compiler-7.4/ebin"]},
     {primLoad,
         [beam_a,beam_asm,beam_block,beam_clean,beam_dict,beam_disasm,
          beam_except,beam_flatten,beam_jump,beam_kernel_to_ssa,beam_listing,
          beam_opcodes,beam_peep,beam_ssa,beam_ssa_bsm,beam_ssa_codegen,
          beam_ssa_dead,beam_ssa_funs,beam_ssa_lint,beam_ssa_opt,beam_ssa_pp,
          beam_ssa_pre_codegen,beam_ssa_recv,beam_ssa_share,beam_ssa_type,
          beam_trim,beam_utils,beam_validator,beam_z,cerl,cerl_clauses,
          cerl_inline,cerl_sets,cerl_trees,compile,core_lib,core_lint,
          core_parse,core_pp,core_scan,erl_bifs,rec_env,sys_core_alias,
          sys_core_bsm,sys_core_fold,sys_core_fold_lists,sys_core_inline,
          sys_pre_attributes,v3_core,v3_kernel,v3_kernel_pp]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/elixir-1.9.1/ebin"]},
     {primLoad,
         ['Elixir.Access','Elixir.Agent','Elixir.Agent.Server',
          'Elixir.Application','Elixir.ArgumentError',
          'Elixir.ArithmeticError','Elixir.Atom','Elixir.BadArityError',
          'Elixir.BadBooleanError','Elixir.BadFunctionError',
          'Elixir.BadMapError','Elixir.BadStructError','Elixir.Base',
          'Elixir.Behaviour','Elixir.Bitwise','Elixir.Calendar',
          'Elixir.Calendar.ISO','Elixir.Calendar.TimeZoneDatabase',
          'Elixir.Calendar.UTCOnlyTimeZoneDatabase','Elixir.CaseClauseError',
          'Elixir.Code','Elixir.Code.Formatter','Elixir.Code.Identifier',
          'Elixir.Code.LoadError','Elixir.Code.Typespec','Elixir.Collectable',
          'Elixir.Collectable.BitString','Elixir.Collectable.File.Stream',
          'Elixir.Collectable.HashDict','Elixir.Collectable.HashSet',
          'Elixir.Collectable.IO.Stream','Elixir.Collectable.List',
          'Elixir.Collectable.Map','Elixir.Collectable.MapSet',
          'Elixir.CompileError','Elixir.CondClauseError','Elixir.Config',
          'Elixir.Config.Provider','Elixir.Config.Reader','Elixir.Date',
          'Elixir.Date.Range','Elixir.DateTime','Elixir.Dict',
          'Elixir.DynamicSupervisor','Elixir.Enum','Elixir.Enum.EmptyError',
          'Elixir.Enum.OutOfBoundsError','Elixir.Enumerable',
          'Elixir.Enumerable.Date.Range','Elixir.Enumerable.File.Stream',
          'Elixir.Enumerable.Function','Elixir.Enumerable.GenEvent.Stream',
          'Elixir.Enumerable.HashDict','Elixir.Enumerable.HashSet',
          'Elixir.Enumerable.IO.Stream','Elixir.Enumerable.List',
          'Elixir.Enumerable.Map','Elixir.Enumerable.MapSet',
          'Elixir.Enumerable.Range','Elixir.Enumerable.Stream',
          'Elixir.ErlangError','Elixir.Exception','Elixir.File',
          'Elixir.File.CopyError','Elixir.File.Error','Elixir.File.LinkError',
          'Elixir.File.RenameError','Elixir.File.Stat','Elixir.File.Stream',
          'Elixir.Float','Elixir.Function','Elixir.FunctionClauseError',
          'Elixir.GenEvent','Elixir.GenEvent.Stream','Elixir.GenServer',
          'Elixir.HashDict','Elixir.HashSet','Elixir.IO','Elixir.IO.ANSI',
          'Elixir.IO.ANSI.Docs','Elixir.IO.ANSI.Sequence','Elixir.IO.Stream',
          'Elixir.IO.StreamError','Elixir.Inspect','Elixir.Inspect.Algebra',
          'Elixir.Inspect.Any','Elixir.Inspect.Atom',
          'Elixir.Inspect.BitString','Elixir.Inspect.Date',
          'Elixir.Inspect.Date.Range','Elixir.Inspect.DateTime',
          'Elixir.Inspect.Error','Elixir.Inspect.Float',
          'Elixir.Inspect.Function','Elixir.Inspect.HashDict',
          'Elixir.Inspect.HashSet','Elixir.Inspect.Integer',
          'Elixir.Inspect.List','Elixir.Inspect.Map','Elixir.Inspect.MapSet',
          'Elixir.Inspect.NaiveDateTime','Elixir.Inspect.Opts',
          'Elixir.Inspect.PID','Elixir.Inspect.Port','Elixir.Inspect.Range',
          'Elixir.Inspect.Reference','Elixir.Inspect.Regex',
          'Elixir.Inspect.Stream','Elixir.Inspect.Time',
          'Elixir.Inspect.Tuple','Elixir.Inspect.Version',
          'Elixir.Inspect.Version.Requirement','Elixir.Integer',
          'Elixir.Kernel','Elixir.Kernel.CLI','Elixir.Kernel.ErrorHandler',
          'Elixir.Kernel.LexicalTracker','Elixir.Kernel.ParallelCompiler',
          'Elixir.Kernel.ParallelRequire','Elixir.Kernel.SpecialForms',
          'Elixir.Kernel.Typespec','Elixir.Kernel.Utils','Elixir.KeyError',
          'Elixir.Keyword','Elixir.List','Elixir.List.Chars',
          'Elixir.List.Chars.Atom','Elixir.List.Chars.BitString',
          'Elixir.List.Chars.Float','Elixir.List.Chars.Integer',
          'Elixir.List.Chars.List','Elixir.Macro','Elixir.Macro.Env',
          'Elixir.Map','Elixir.MapSet','Elixir.MatchError','Elixir.Module',
          'Elixir.Module.LocalsTracker','Elixir.NaiveDateTime','Elixir.Node',
          'Elixir.OptionParser','Elixir.OptionParser.ParseError',
          'Elixir.Path','Elixir.Path.Wildcard','Elixir.Port','Elixir.Process',
          'Elixir.Protocol','Elixir.Protocol.UndefinedError','Elixir.Range',
          'Elixir.Record','Elixir.Record.Extractor','Elixir.Regex',
          'Elixir.Regex.CompileError','Elixir.Registry',
          'Elixir.Registry.Partition','Elixir.Registry.Supervisor',
          'Elixir.RuntimeError','Elixir.Set','Elixir.Stream',
          'Elixir.Stream.Reducers','Elixir.String','Elixir.String.Break',
          'Elixir.String.Casing','Elixir.String.Chars',
          'Elixir.String.Chars.Atom','Elixir.String.Chars.BitString',
          'Elixir.String.Chars.Date','Elixir.String.Chars.DateTime',
          'Elixir.String.Chars.Float','Elixir.String.Chars.Integer',
          'Elixir.String.Chars.List','Elixir.String.Chars.NaiveDateTime',
          'Elixir.String.Chars.Time','Elixir.String.Chars.URI',
          'Elixir.String.Chars.Version',
          'Elixir.String.Chars.Version.Requirement','Elixir.String.Tokenizer',
          'Elixir.String.Unicode','Elixir.StringIO','Elixir.Supervisor',
          'Elixir.Supervisor.Default','Elixir.Supervisor.Spec',
          'Elixir.SyntaxError','Elixir.System','Elixir.SystemLimitError',
          'Elixir.Task','Elixir.Task.Supervised','Elixir.Task.Supervisor',
          'Elixir.Time','Elixir.TokenMissingError','Elixir.TryClauseError',
          'Elixir.Tuple','Elixir.URI','Elixir.UndefinedFunctionError',
          'Elixir.UnicodeConversionError','Elixir.Version',
          'Elixir.Version.InvalidRequirementError',
          'Elixir.Version.InvalidVersionError','Elixir.Version.Parser',
          'Elixir.Version.Requirement','Elixir.WithClauseError',elixir,
          elixir_aliases,elixir_bitstring,elixir_bootstrap,elixir_clauses,
          elixir_code_server,elixir_compiler,elixir_config,elixir_def,
          elixir_dispatch,elixir_env,elixir_erl,elixir_erl_clauses,
          elixir_erl_compiler,elixir_erl_for,elixir_erl_pass,elixir_erl_try,
          elixir_erl_var,elixir_errors,elixir_expand,elixir_fn,elixir_import,
          elixir_interpolation,elixir_lexical,elixir_locals,elixir_map,
          elixir_module,elixir_overridable,elixir_parser,elixir_quote,
          elixir_rewrite,elixir_sup,elixir_tokenizer,elixir_utils]},
     {path,["$ROOT/lib/sasl-3.4/ebin"]},
     {primLoad,
         [alarm_handler,erlsrv,format_lib_supp,misc_supp,rb,rb_format_supp,
          release_handler,release_handler_1,sasl,sasl_report,
          sasl_report_file_h,sasl_report_tty_h,systools,systools_lib,
          systools_make,systools_rc,systools_relup]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/connection-1.0.4/ebin"]},
     {primLoad,['Elixir.Connection']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/logger-1.9.1/ebin"]},
     {primLoad,
         ['Elixir.Logger','Elixir.Logger.App',
          'Elixir.Logger.BackendSupervisor','Elixir.Logger.Backends.Console',
          'Elixir.Logger.Config','Elixir.Logger.ErlangHandler',
          'Elixir.Logger.ErrorHandler','Elixir.Logger.Formatter',
          'Elixir.Logger.Translator','Elixir.Logger.Utils',
          'Elixir.Logger.Watcher']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/decimal-1.8.0/ebin"]},
     {primLoad,
         ['Elixir.Decimal','Elixir.Decimal.Context','Elixir.Decimal.Error',
          'Elixir.Decimal.Macros','Elixir.Inspect.Decimal',
          'Elixir.String.Chars.Decimal']},
     {path,["$ROOT/lib/crypto-4.5/ebin"]},
     {primLoad,[crypto,crypto_ec_curves]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/db_connection-2.1.1/ebin"]},
     {primLoad,
         ['Elixir.DBConnection','Elixir.DBConnection.App',
          'Elixir.DBConnection.Backoff','Elixir.DBConnection.Connection',
          'Elixir.DBConnection.ConnectionError',
          'Elixir.DBConnection.ConnectionPool',
          'Elixir.DBConnection.ConnectionPool.Pool',
          'Elixir.DBConnection.EncodeError','Elixir.DBConnection.Holder',
          'Elixir.DBConnection.LogEntry','Elixir.DBConnection.Ownership',
          'Elixir.DBConnection.Ownership.Manager',
          'Elixir.DBConnection.Ownership.Proxy',
          'Elixir.DBConnection.OwnershipError',
          'Elixir.DBConnection.PrepareStream','Elixir.DBConnection.Query',
          'Elixir.DBConnection.Stream','Elixir.DBConnection.Task',
          'Elixir.DBConnection.TransactionError',
          'Elixir.DBConnection.Watcher',
          'Elixir.Enumerable.DBConnection.PrepareStream',
          'Elixir.Enumerable.DBConnection.Stream']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/postgrex-0.15.0/ebin"]},
     {primLoad,
         ['Elixir.Collectable.Postgrex.Stream',
          'Elixir.DBConnection.Query.Postgrex.Copy',
          'Elixir.DBConnection.Query.Postgrex.Parameters',
          'Elixir.DBConnection.Query.Postgrex.Query',
          'Elixir.Enumerable.Postgrex.Stream','Elixir.Postgrex',
          'Elixir.Postgrex.App','Elixir.Postgrex.BinaryExtension',
          'Elixir.Postgrex.BinaryUtils','Elixir.Postgrex.Box',
          'Elixir.Postgrex.Circle','Elixir.Postgrex.Copy',
          'Elixir.Postgrex.Cursor','Elixir.Postgrex.DefaultTypes',
          'Elixir.Postgrex.Error','Elixir.Postgrex.ErrorCode',
          'Elixir.Postgrex.Extension','Elixir.Postgrex.Extensions.Array',
          'Elixir.Postgrex.Extensions.BitString',
          'Elixir.Postgrex.Extensions.Bool','Elixir.Postgrex.Extensions.Box',
          'Elixir.Postgrex.Extensions.Circle',
          'Elixir.Postgrex.Extensions.Date',
          'Elixir.Postgrex.Extensions.Float4',
          'Elixir.Postgrex.Extensions.Float8',
          'Elixir.Postgrex.Extensions.HStore',
          'Elixir.Postgrex.Extensions.INET','Elixir.Postgrex.Extensions.Int2',
          'Elixir.Postgrex.Extensions.Int4','Elixir.Postgrex.Extensions.Int8',
          'Elixir.Postgrex.Extensions.Interval',
          'Elixir.Postgrex.Extensions.JSON',
          'Elixir.Postgrex.Extensions.JSONB',
          'Elixir.Postgrex.Extensions.Line',
          'Elixir.Postgrex.Extensions.LineSegment',
          'Elixir.Postgrex.Extensions.MACADDR',
          'Elixir.Postgrex.Extensions.Name',
          'Elixir.Postgrex.Extensions.Numeric',
          'Elixir.Postgrex.Extensions.OID','Elixir.Postgrex.Extensions.Path',
          'Elixir.Postgrex.Extensions.Point',
          'Elixir.Postgrex.Extensions.Polygon',
          'Elixir.Postgrex.Extensions.Range','Elixir.Postgrex.Extensions.Raw',
          'Elixir.Postgrex.Extensions.Record',
          'Elixir.Postgrex.Extensions.TID',
          'Elixir.Postgrex.Extensions.TSVector',
          'Elixir.Postgrex.Extensions.Time',
          'Elixir.Postgrex.Extensions.TimeTZ',
          'Elixir.Postgrex.Extensions.Timestamp',
          'Elixir.Postgrex.Extensions.TimestampTZ',
          'Elixir.Postgrex.Extensions.UUID',
          'Elixir.Postgrex.Extensions.VoidBinary',
          'Elixir.Postgrex.Extensions.VoidText','Elixir.Postgrex.INET',
          'Elixir.Postgrex.Interval','Elixir.Postgrex.Lexeme',
          'Elixir.Postgrex.Line','Elixir.Postgrex.LineSegment',
          'Elixir.Postgrex.MACADDR','Elixir.Postgrex.Messages',
          'Elixir.Postgrex.Notifications','Elixir.Postgrex.Parameters',
          'Elixir.Postgrex.Path','Elixir.Postgrex.Point',
          'Elixir.Postgrex.Polygon','Elixir.Postgrex.Protocol',
          'Elixir.Postgrex.Query','Elixir.Postgrex.QueryError',
          'Elixir.Postgrex.Range','Elixir.Postgrex.Result',
          'Elixir.Postgrex.SCRAM','Elixir.Postgrex.Stream',
          'Elixir.Postgrex.SuperExtension','Elixir.Postgrex.TypeInfo',
          'Elixir.Postgrex.TypeModule','Elixir.Postgrex.TypeServer',
          'Elixir.Postgrex.TypeSupervisor','Elixir.Postgrex.Types',
          'Elixir.Postgrex.Utils','Elixir.String.Chars.Postgrex.Copy',
          'Elixir.String.Chars.Postgrex.Query']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/gettext-0.17.0/ebin"]},
     {primLoad,
         ['Elixir.Gettext','Elixir.Gettext.Application',
          'Elixir.Gettext.Backend','Elixir.Gettext.Compiler',
          'Elixir.Gettext.Error','Elixir.Gettext.Extractor',
          'Elixir.Gettext.ExtractorAgent','Elixir.Gettext.Fuzzy',
          'Elixir.Gettext.Interpolation','Elixir.Gettext.Merger',
          'Elixir.Gettext.MissingBindingsError','Elixir.Gettext.PO',
          'Elixir.Gettext.PO.Parser','Elixir.Gettext.PO.PluralTranslation',
          'Elixir.Gettext.PO.SyntaxError','Elixir.Gettext.PO.Tokenizer',
          'Elixir.Gettext.PO.Translation','Elixir.Gettext.PO.Translations',
          'Elixir.Gettext.Plural','Elixir.Gettext.Plural.UnknownLocaleError',
          'Elixir.Mix.Tasks.Compile.Gettext',
          'Elixir.Mix.Tasks.Gettext.Extract','Elixir.Mix.Tasks.Gettext.Merge',
          gettext_po_parser]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/certifi-2.4.2/ebin"]},
     {primLoad,[certifi]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/ssl_verify_fun-1.1.4/ebin"]},
     {primLoad,
         [ssl_verify_fingerprint,ssl_verify_fun_cert_helpers,
          ssl_verify_fun_encodings,ssl_verify_hostname,ssl_verify_pk,
          ssl_verify_string,ssl_verify_util]},
     {path,["$ROOT/lib/asn1-5.0.9/ebin"]},
     {primLoad,[asn1rt_nif]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/unicode_util_compat-0.4.1/ebin"]},
     {primLoad,[unicode_util_compat]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/idna-6.0.0/ebin"]},
     {primLoad,
         [idna,idna_bidi,idna_context,idna_data,idna_mapping,idna_table,
          idna_ucs,punycode]},
     {path,["$ROOT/lib/public_key-1.6.7/ebin"]},
     {primLoad,
         ['OTP-PUB-KEY','PKCS-FRAME',pubkey_cert,pubkey_cert_records,
          pubkey_crl,pubkey_pbe,pubkey_pem,pubkey_ssh,public_key]},
     {path,["$ROOT/lib/ssl-9.3/ebin"]},
     {primLoad,
         [dtls_connection,dtls_connection_sup,dtls_handshake,
          dtls_listener_sup,dtls_packet_demux,dtls_record,dtls_socket,dtls_v1,
          inet6_tls_dist,inet_tls_dist,ssl,ssl_admin_sup,ssl_alert,ssl_app,
          ssl_certificate,ssl_cipher,ssl_cipher_format,ssl_config,
          ssl_connection,ssl_connection_sup,ssl_crl,ssl_crl_cache,
          ssl_crl_cache_api,ssl_crl_hash_dir,ssl_dh_groups,ssl_dist_admin_sup,
          ssl_dist_connection_sup,ssl_dist_sup,ssl_handshake,
          ssl_listen_tracker_sup,ssl_logger,ssl_manager,ssl_pem_cache,
          ssl_pkix_db,ssl_record,ssl_session,ssl_session_cache,
          ssl_session_cache_api,ssl_srp_primes,ssl_sup,ssl_v3,tls_connection,
          tls_connection_1_3,tls_connection_sup,tls_handshake,
          tls_handshake_1_3,tls_record,tls_record_1_3,tls_sender,tls_socket,
          tls_v1]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/metrics-1.0.1/ebin"]},
     {primLoad,[metrics,metrics_dummy,metrics_exometer,metrics_folsom]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/mimerl-1.0.2/ebin"]},
     {primLoad,[mimerl]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/hackney-1.15.0/ebin"]},
     {primLoad,
         [hackney,hackney_app,hackney_bstr,hackney_connect,hackney_cookie,
          hackney_date,hackney_headers,hackney_headers_new,hackney_http,
          hackney_http_connect,hackney_local_tcp,hackney_manager,
          hackney_metrics,hackney_multipart,hackney_pool,hackney_pool_handler,
          hackney_request,hackney_response,hackney_socks5,hackney_ssl,
          hackney_stream,hackney_sup,hackney_tcp,hackney_trace,hackney_url,
          hackney_util]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/tzdata-1.0.1/ebin"]},
     {primLoad,
         ['Elixir.Tzdata','Elixir.Tzdata.App','Elixir.Tzdata.BasicDataMap',
          'Elixir.Tzdata.DataBuilder','Elixir.Tzdata.DataLoader',
          'Elixir.Tzdata.EtsHolder','Elixir.Tzdata.FarFutureDynamicPeriods',
          'Elixir.Tzdata.LeapSecParser','Elixir.Tzdata.Parser',
          'Elixir.Tzdata.ParserOrganizer','Elixir.Tzdata.PeriodBuilder',
          'Elixir.Tzdata.ReleaseReader','Elixir.Tzdata.ReleaseUpdater',
          'Elixir.Tzdata.TimeZoneDatabase','Elixir.Tzdata.Util']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/combine-0.10.0/ebin"]},
     {primLoad,
         ['Elixir.Combine','Elixir.Combine.Helpers',
          'Elixir.Combine.ParserState','Elixir.Combine.Parsers.Base',
          'Elixir.Combine.Parsers.Binary','Elixir.Combine.Parsers.Text']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/timex-3.6.1/ebin"]},
     {primLoad,
         ['Elixir.Enumerable.Timex.Interval',
          'Elixir.Inspect.Timex.AmbiguousDateTime',
          'Elixir.Inspect.Timex.AmbiguousTimezoneInfo',
          'Elixir.Inspect.Timex.Duration','Elixir.Inspect.Timex.TimezoneInfo',
          'Elixir.Timex','Elixir.Timex.AmbiguousDateTime',
          'Elixir.Timex.AmbiguousTimezoneInfo','Elixir.Timex.Calendar.Julian',
          'Elixir.Timex.Comparable','Elixir.Timex.Comparable.Date',
          'Elixir.Timex.Comparable.DateTime','Elixir.Timex.Comparable.Diff',
          'Elixir.Timex.Comparable.NaiveDateTime',
          'Elixir.Timex.Comparable.Timex.AmbiguousDateTime',
          'Elixir.Timex.Comparable.Tuple','Elixir.Timex.Comparable.Utils',
          'Elixir.Timex.Constants','Elixir.Timex.Convert',
          'Elixir.Timex.ConvertError','Elixir.Timex.DateTime.Helpers',
          'Elixir.Timex.Duration','Elixir.Timex.Format.DateTime.Formatter',
          'Elixir.Timex.Format.DateTime.Formatters.Default',
          'Elixir.Timex.Format.DateTime.Formatters.Relative',
          'Elixir.Timex.Format.DateTime.Formatters.Strftime',
          'Elixir.Timex.Format.Duration.Formatter',
          'Elixir.Timex.Format.Duration.Formatters.Default',
          'Elixir.Timex.Format.Duration.Formatters.Humanized',
          'Elixir.Timex.Format.FormatError','Elixir.Timex.Gettext',
          'Elixir.Timex.Helpers','Elixir.Timex.Interval',
          'Elixir.Timex.Interval.FormatError','Elixir.Timex.Macros',
          'Elixir.Timex.Parse.DateTime.Helpers',
          'Elixir.Timex.Parse.DateTime.Parser',
          'Elixir.Timex.Parse.DateTime.Parsers',
          'Elixir.Timex.Parse.DateTime.Parsers.ISO8601Extended',
          'Elixir.Timex.Parse.DateTime.Tokenizer',
          'Elixir.Timex.Parse.DateTime.Tokenizers.Default',
          'Elixir.Timex.Parse.DateTime.Tokenizers.Directive',
          'Elixir.Timex.Parse.DateTime.Tokenizers.Strftime',
          'Elixir.Timex.Parse.Duration.Parser',
          'Elixir.Timex.Parse.Duration.Parsers.ISO8601Parser',
          'Elixir.Timex.Parse.ParseError',
          'Elixir.Timex.Parse.Timezones.Posix',
          'Elixir.Timex.Parse.Timezones.Posix.PosixTimezone',
          'Elixir.Timex.Parse.ZoneInfo.Parser',
          'Elixir.Timex.Parse.ZoneInfo.Parser.Header',
          'Elixir.Timex.Parse.ZoneInfo.Parser.LeapSecond',
          'Elixir.Timex.Parse.ZoneInfo.Parser.TransitionInfo',
          'Elixir.Timex.Parse.ZoneInfo.Parser.Zone','Elixir.Timex.Protocol',
          'Elixir.Timex.Protocol.Any','Elixir.Timex.Protocol.Date',
          'Elixir.Timex.Protocol.DateTime','Elixir.Timex.Protocol.Map',
          'Elixir.Timex.Protocol.NaiveDateTime','Elixir.Timex.Protocol.Tuple',
          'Elixir.Timex.Time','Elixir.Timex.Timezone',
          'Elixir.Timex.Timezone.Local','Elixir.Timex.Timezone.Utils',
          'Elixir.Timex.TimezoneInfo','Elixir.Timex.Translator',
          'Elixir.Timex.Types']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/briefly-0.3.0/ebin"]},
     {primLoad,
         ['Elixir.Briefly','Elixir.Briefly.Config','Elixir.Briefly.Entry',
          'Elixir.Briefly.Supervisor']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/puppeteer_pdf-1.0.3/ebin"]},
     {primLoad,
         ['Elixir.CommandHelper','Elixir.PuppeteerPdf',
          'Elixir.PuppeteerPdf.Generate']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/poison-3.1.0/ebin"]},
     {primLoad,
         ['Elixir.Poison','Elixir.Poison.Decode','Elixir.Poison.Decoder',
          'Elixir.Poison.Decoder.Any','Elixir.Poison.Encode',
          'Elixir.Poison.EncodeError','Elixir.Poison.Encoder',
          'Elixir.Poison.Encoder.Any','Elixir.Poison.Encoder.Atom',
          'Elixir.Poison.Encoder.BitString','Elixir.Poison.Encoder.Date',
          'Elixir.Poison.Encoder.DateTime','Elixir.Poison.Encoder.Float',
          'Elixir.Poison.Encoder.HashSet','Elixir.Poison.Encoder.Integer',
          'Elixir.Poison.Encoder.List','Elixir.Poison.Encoder.Map',
          'Elixir.Poison.Encoder.MapSet',
          'Elixir.Poison.Encoder.NaiveDateTime','Elixir.Poison.Encoder.Range',
          'Elixir.Poison.Encoder.Stream','Elixir.Poison.Encoder.Time',
          'Elixir.Poison.Parser','Elixir.Poison.Pretty',
          'Elixir.Poison.SyntaxError']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/emojix-0.1.2/ebin"]},
     {primLoad,
         ['Elixir.Emojix','Elixir.Emojix.Emoji',
          'Elixir.Mix.Tasks.Emojix.Install']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/jason-1.1.2/ebin"]},
     {primLoad,
         ['Elixir.Jason','Elixir.Jason.Codegen','Elixir.Jason.DecodeError',
          'Elixir.Jason.Decoder','Elixir.Jason.Decoder.Unescape',
          'Elixir.Jason.Encode','Elixir.Jason.EncodeError',
          'Elixir.Jason.Encoder','Elixir.Jason.Encoder.Any',
          'Elixir.Jason.Encoder.Atom','Elixir.Jason.Encoder.BitString',
          'Elixir.Jason.Encoder.Date','Elixir.Jason.Encoder.DateTime',
          'Elixir.Jason.Encoder.Decimal','Elixir.Jason.Encoder.Float',
          'Elixir.Jason.Encoder.Integer',
          'Elixir.Jason.Encoder.Jason.Fragment','Elixir.Jason.Encoder.List',
          'Elixir.Jason.Encoder.Map','Elixir.Jason.Encoder.NaiveDateTime',
          'Elixir.Jason.Encoder.Time','Elixir.Jason.Formatter',
          'Elixir.Jason.Fragment','Elixir.Jason.Helpers']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/ecto-3.1.7/ebin"]},
     {primLoad,
         ['Elixir.Ecto','Elixir.Ecto.Adapter','Elixir.Ecto.Adapter.Queryable',
          'Elixir.Ecto.Adapter.Schema','Elixir.Ecto.Adapter.Storage',
          'Elixir.Ecto.Adapter.Transaction','Elixir.Ecto.Application',
          'Elixir.Ecto.Association','Elixir.Ecto.Association.BelongsTo',
          'Elixir.Ecto.Association.Has','Elixir.Ecto.Association.HasThrough',
          'Elixir.Ecto.Association.ManyToMany',
          'Elixir.Ecto.Association.NotLoaded','Elixir.Ecto.CastError',
          'Elixir.Ecto.ChangeError','Elixir.Ecto.Changeset',
          'Elixir.Ecto.Changeset.Relation','Elixir.Ecto.ConstraintError',
          'Elixir.Ecto.Embedded','Elixir.Ecto.InvalidChangesetError',
          'Elixir.Ecto.InvalidURLError','Elixir.Ecto.LogEntry',
          'Elixir.Ecto.MigrationError','Elixir.Ecto.Multi',
          'Elixir.Ecto.MultiplePrimaryKeyError',
          'Elixir.Ecto.MultipleResultsError',
          'Elixir.Ecto.NoPrimaryKeyFieldError',
          'Elixir.Ecto.NoPrimaryKeyValueError','Elixir.Ecto.NoResultsError',
          'Elixir.Ecto.Query','Elixir.Ecto.Query.API',
          'Elixir.Ecto.Query.BooleanExpr','Elixir.Ecto.Query.Builder',
          'Elixir.Ecto.Query.Builder.Combination',
          'Elixir.Ecto.Query.Builder.Distinct',
          'Elixir.Ecto.Query.Builder.Dynamic',
          'Elixir.Ecto.Query.Builder.Filter','Elixir.Ecto.Query.Builder.From',
          'Elixir.Ecto.Query.Builder.GroupBy',
          'Elixir.Ecto.Query.Builder.Join',
          'Elixir.Ecto.Query.Builder.LimitOffset',
          'Elixir.Ecto.Query.Builder.Lock',
          'Elixir.Ecto.Query.Builder.OrderBy',
          'Elixir.Ecto.Query.Builder.Preload',
          'Elixir.Ecto.Query.Builder.Select',
          'Elixir.Ecto.Query.Builder.Update',
          'Elixir.Ecto.Query.Builder.Windows','Elixir.Ecto.Query.CastError',
          'Elixir.Ecto.Query.CompileError','Elixir.Ecto.Query.DynamicExpr',
          'Elixir.Ecto.Query.FromExpr','Elixir.Ecto.Query.JoinExpr',
          'Elixir.Ecto.Query.Planner','Elixir.Ecto.Query.QueryExpr',
          'Elixir.Ecto.Query.SelectExpr','Elixir.Ecto.Query.Tagged',
          'Elixir.Ecto.Query.WindowAPI','Elixir.Ecto.QueryError',
          'Elixir.Ecto.Queryable','Elixir.Ecto.Queryable.Atom',
          'Elixir.Ecto.Queryable.BitString',
          'Elixir.Ecto.Queryable.Ecto.Query',
          'Elixir.Ecto.Queryable.Ecto.SubQuery','Elixir.Ecto.Queryable.Tuple',
          'Elixir.Ecto.Repo','Elixir.Ecto.Repo.Assoc',
          'Elixir.Ecto.Repo.Preloader','Elixir.Ecto.Repo.Queryable',
          'Elixir.Ecto.Repo.Registry','Elixir.Ecto.Repo.Schema',
          'Elixir.Ecto.Repo.Supervisor','Elixir.Ecto.Repo.Transaction',
          'Elixir.Ecto.Schema','Elixir.Ecto.Schema.Loader',
          'Elixir.Ecto.Schema.Metadata','Elixir.Ecto.StaleEntryError',
          'Elixir.Ecto.SubQuery','Elixir.Ecto.SubQueryError',
          'Elixir.Ecto.Type','Elixir.Ecto.UUID',
          'Elixir.Inspect.Ecto.Association.NotLoaded',
          'Elixir.Inspect.Ecto.Changeset','Elixir.Inspect.Ecto.Query',
          'Elixir.Inspect.Ecto.Query.DynamicExpr',
          'Elixir.Inspect.Ecto.Schema.Metadata',
          'Elixir.Jason.Encoder.Ecto.Association.NotLoaded',
          'Elixir.Jason.Encoder.Ecto.Schema.Metadata','Elixir.Mix.Ecto',
          'Elixir.Mix.Tasks.Ecto','Elixir.Mix.Tasks.Ecto.Create',
          'Elixir.Mix.Tasks.Ecto.Drop','Elixir.Mix.Tasks.Ecto.Gen.Repo']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/telemetry-0.4.0/ebin"]},
     {primLoad,
         [telemetry,telemetry_app,telemetry_handler_table,telemetry_sup]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/ecto_sql-3.1.6/ebin"]},
     {primLoad,
         ['Elixir.Collectable.Ecto.Adapters.SQL.Stream',
          'Elixir.Ecto.Adapter.Migration','Elixir.Ecto.Adapter.Structure',
          'Elixir.Ecto.Adapters.MySQL','Elixir.Ecto.Adapters.MyXQL',
          'Elixir.Ecto.Adapters.Postgres',
          'Elixir.Ecto.Adapters.Postgres.Connection',
          'Elixir.Ecto.Adapters.SQL','Elixir.Ecto.Adapters.SQL.Application',
          'Elixir.Ecto.Adapters.SQL.Connection',
          'Elixir.Ecto.Adapters.SQL.Sandbox',
          'Elixir.Ecto.Adapters.SQL.Sandbox.Connection',
          'Elixir.Ecto.Adapters.SQL.Stream','Elixir.Ecto.Migration',
          'Elixir.Ecto.Migration.Command','Elixir.Ecto.Migration.Constraint',
          'Elixir.Ecto.Migration.Index','Elixir.Ecto.Migration.Reference',
          'Elixir.Ecto.Migration.Runner',
          'Elixir.Ecto.Migration.SchemaMigration',
          'Elixir.Ecto.Migration.Supervisor','Elixir.Ecto.Migration.Table',
          'Elixir.Ecto.Migrator','Elixir.Enumerable.Ecto.Adapters.SQL.Stream',
          'Elixir.Mix.EctoSQL','Elixir.Mix.Tasks.Ecto.Dump',
          'Elixir.Mix.Tasks.Ecto.Gen.Migration','Elixir.Mix.Tasks.Ecto.Load',
          'Elixir.Mix.Tasks.Ecto.Migrate','Elixir.Mix.Tasks.Ecto.Migrations',
          'Elixir.Mix.Tasks.Ecto.Rollback']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/maxwell-2.2.3/ebin"]},
     {primLoad,
         ['Elixir.Inspect.Maxwell.Conn','Elixir.Maxwell',
          'Elixir.Maxwell.Adapter','Elixir.Maxwell.Adapter.Hackney',
          'Elixir.Maxwell.Adapter.Httpc','Elixir.Maxwell.Adapter.Util',
          'Elixir.Maxwell.Builder','Elixir.Maxwell.Builder.Adapter',
          'Elixir.Maxwell.Builder.Middleware','Elixir.Maxwell.Builder.Util',
          'Elixir.Maxwell.Conn','Elixir.Maxwell.Conn.AlreadySentError',
          'Elixir.Maxwell.Conn.NotSentError','Elixir.Maxwell.Error',
          'Elixir.Maxwell.Middleware','Elixir.Maxwell.Middleware.BaseUrl',
          'Elixir.Maxwell.Middleware.DecodeJson',
          'Elixir.Maxwell.Middleware.EncodeJson',
          'Elixir.Maxwell.Middleware.HeaderCase',
          'Elixir.Maxwell.Middleware.Headers',
          'Elixir.Maxwell.Middleware.Json','Elixir.Maxwell.Middleware.Logger',
          'Elixir.Maxwell.Middleware.Opts','Elixir.Maxwell.Middleware.Rels',
          'Elixir.Maxwell.Middleware.Retry','Elixir.Maxwell.Multipart',
          'Elixir.Maxwell.Query']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/ex_gram-0.6.0/ebin"]},
     {primLoad,
         ['Elixir.ExGram','Elixir.ExGram.Adapter',
          'Elixir.ExGram.Adapter.Http','Elixir.ExGram.Adapter.Test',
          'Elixir.ExGram.Bot','Elixir.ExGram.Cnt','Elixir.ExGram.Commands',
          'Elixir.ExGram.Config','Elixir.ExGram.Dispatcher',
          'Elixir.ExGram.Dsl','Elixir.ExGram.Dsl.Keyboard',
          'Elixir.ExGram.Encoder','Elixir.ExGram.Encoder.Engine',
          'Elixir.ExGram.Encoder.EngineCompiler','Elixir.ExGram.Error',
          'Elixir.ExGram.File','Elixir.ExGram.Handler','Elixir.ExGram.Macros',
          'Elixir.ExGram.Middleware','Elixir.ExGram.Middleware.Builder',
          'Elixir.ExGram.Middleware.IgnoreUsername','Elixir.ExGram.Model',
          'Elixir.ExGram.Model.Animation','Elixir.ExGram.Model.Audio',
          'Elixir.ExGram.Model.CallbackGame',
          'Elixir.ExGram.Model.CallbackQuery','Elixir.ExGram.Model.Chat',
          'Elixir.ExGram.Model.ChatMember','Elixir.ExGram.Model.ChatPhoto',
          'Elixir.ExGram.Model.ChosenInlineResult',
          'Elixir.ExGram.Model.Contact','Elixir.ExGram.Model.Document',
          'Elixir.ExGram.Model.EncryptedCredentials',
          'Elixir.ExGram.Model.EncryptedPassportElement',
          'Elixir.ExGram.Model.File','Elixir.ExGram.Model.ForceReply',
          'Elixir.ExGram.Model.Game','Elixir.ExGram.Model.GameHighScore',
          'Elixir.ExGram.Model.InlineKeyboardButton',
          'Elixir.ExGram.Model.InlineKeyboardMarkup',
          'Elixir.ExGram.Model.InlineQuery',
          'Elixir.ExGram.Model.InlineQueryResult',
          'Elixir.ExGram.Model.InlineQueryResultArticle',
          'Elixir.ExGram.Model.InlineQueryResultAudio',
          'Elixir.ExGram.Model.InlineQueryResultCachedAudio',
          'Elixir.ExGram.Model.InlineQueryResultCachedDocument',
          'Elixir.ExGram.Model.InlineQueryResultCachedGif',
          'Elixir.ExGram.Model.InlineQueryResultCachedMpeg4Gif',
          'Elixir.ExGram.Model.InlineQueryResultCachedPhoto',
          'Elixir.ExGram.Model.InlineQueryResultCachedSticker',
          'Elixir.ExGram.Model.InlineQueryResultCachedVideo',
          'Elixir.ExGram.Model.InlineQueryResultCachedVoice',
          'Elixir.ExGram.Model.InlineQueryResultContact',
          'Elixir.ExGram.Model.InlineQueryResultDocument',
          'Elixir.ExGram.Model.InlineQueryResultGame',
          'Elixir.ExGram.Model.InlineQueryResultGif',
          'Elixir.ExGram.Model.InlineQueryResultLocation',
          'Elixir.ExGram.Model.InlineQueryResultMpeg4Gif',
          'Elixir.ExGram.Model.InlineQueryResultPhoto',
          'Elixir.ExGram.Model.InlineQueryResultVenue',
          'Elixir.ExGram.Model.InlineQueryResultVideo',
          'Elixir.ExGram.Model.InlineQueryResultVoice',
          'Elixir.ExGram.Model.InputContactMessageContent',
          'Elixir.ExGram.Model.InputFile',
          'Elixir.ExGram.Model.InputLocationMessageContent',
          'Elixir.ExGram.Model.InputMedia',
          'Elixir.ExGram.Model.InputMediaAnimation',
          'Elixir.ExGram.Model.InputMediaAudio',
          'Elixir.ExGram.Model.InputMediaDocument',
          'Elixir.ExGram.Model.InputMediaPhoto',
          'Elixir.ExGram.Model.InputMediaVideo',
          'Elixir.ExGram.Model.InputMessageContent',
          'Elixir.ExGram.Model.InputTextMessageContent',
          'Elixir.ExGram.Model.InputVenueMessageContent',
          'Elixir.ExGram.Model.Invoice','Elixir.ExGram.Model.KeyboardButton',
          'Elixir.ExGram.Model.LabeledPrice','Elixir.ExGram.Model.Location',
          'Elixir.ExGram.Model.MaskPosition','Elixir.ExGram.Model.Message',
          'Elixir.ExGram.Model.MessageEntity','Elixir.ExGram.Model.OrderInfo',
          'Elixir.ExGram.Model.PassportData',
          'Elixir.ExGram.Model.PassportElementError',
          'Elixir.ExGram.Model.PassportElementErrorDataField',
          'Elixir.ExGram.Model.PassportElementErrorFile',
          'Elixir.ExGram.Model.PassportElementErrorFiles',
          'Elixir.ExGram.Model.PassportElementErrorFrontSide',
          'Elixir.ExGram.Model.PassportElementErrorReverseSide',
          'Elixir.ExGram.Model.PassportElementErrorSelfie',
          'Elixir.ExGram.Model.PassportFile','Elixir.ExGram.Model.PhotoSize',
          'Elixir.ExGram.Model.PreCheckoutQuery',
          'Elixir.ExGram.Model.ReplyKeyboardMarkup',
          'Elixir.ExGram.Model.ReplyKeyboardRemove',
          'Elixir.ExGram.Model.ResponseParameters',
          'Elixir.ExGram.Model.ShippingAddress',
          'Elixir.ExGram.Model.ShippingOption',
          'Elixir.ExGram.Model.ShippingQuery','Elixir.ExGram.Model.Sticker',
          'Elixir.ExGram.Model.StickerSet',
          'Elixir.ExGram.Model.SuccessfulPayment',
          'Elixir.ExGram.Model.Update','Elixir.ExGram.Model.User',
          'Elixir.ExGram.Model.UserProfilePhotos','Elixir.ExGram.Model.Venue',
          'Elixir.ExGram.Model.Video','Elixir.ExGram.Model.VideoNote',
          'Elixir.ExGram.Model.Voice','Elixir.ExGram.Model.WebhookInfo',
          'Elixir.ExGram.Responses','Elixir.ExGram.Responses.Answer',
          'Elixir.ExGram.Responses.AnswerCallback',
          'Elixir.ExGram.Responses.AnswerInlineQuery',
          'Elixir.ExGram.Responses.Atom',
          'Elixir.ExGram.Responses.DeleteMessage',
          'Elixir.ExGram.Responses.EditInline',
          'Elixir.ExGram.Responses.EditMarkup',
          'Elixir.ExGram.Responses.ExGram.Responses.Answer',
          'Elixir.ExGram.Responses.ExGram.Responses.AnswerCallback',
          'Elixir.ExGram.Responses.ExGram.Responses.AnswerInlineQuery',
          'Elixir.ExGram.Responses.ExGram.Responses.DeleteMessage',
          'Elixir.ExGram.Responses.ExGram.Responses.EditInline',
          'Elixir.ExGram.Responses.ExGram.Responses.EditMarkup',
          'Elixir.ExGram.Token','Elixir.ExGram.Updates.Noup',
          'Elixir.ExGram.Updates.Polling','Elixir.ExGram.Updates.Test',
          'Elixir.Examples.Simple','Elixir.Examples.Sup']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/drinkly-0.1.0/ebin"]},
     {primLoad,
         ['Elixir.Drinkly','Elixir.Drinkly.Application','Elixir.Drinkly.Bot',
          'Elixir.Drinkly.CallbackQuery','Elixir.Drinkly.CommandHandler',
          'Elixir.Drinkly.Commands','Elixir.Drinkly.Drinks',
          'Elixir.Drinkly.Drinks.Drink',
          'Elixir.Drinkly.Exception.InvalidTime','Elixir.Drinkly.Helper',
          'Elixir.Drinkly.Metrics','Elixir.Drinkly.Metrics.Metric',
          'Elixir.Drinkly.Parser','Elixir.Drinkly.Reminder',
          'Elixir.Drinkly.Repo','Elixir.Drinkly.Texts','Elixir.Drinkly.Users',
          'Elixir.Drinkly.Users.User','Elixir.Drinkly.Validator']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/iex-1.9.1/ebin"]},
     {primLoad,
         ['Elixir.IEx','Elixir.IEx.App','Elixir.IEx.Autocomplete',
          'Elixir.IEx.Broker','Elixir.IEx.CLI','Elixir.IEx.Config',
          'Elixir.IEx.Evaluator','Elixir.IEx.Helpers','Elixir.IEx.History',
          'Elixir.IEx.Info','Elixir.IEx.Info.Any','Elixir.IEx.Info.Atom',
          'Elixir.IEx.Info.BitString','Elixir.IEx.Info.Date',
          'Elixir.IEx.Info.Float','Elixir.IEx.Info.Function',
          'Elixir.IEx.Info.Integer','Elixir.IEx.Info.List',
          'Elixir.IEx.Info.Map','Elixir.IEx.Info.NaiveDateTime',
          'Elixir.IEx.Info.PID','Elixir.IEx.Info.Port',
          'Elixir.IEx.Info.Reference','Elixir.IEx.Info.Time',
          'Elixir.IEx.Info.Tuple','Elixir.IEx.Introspection','Elixir.IEx.Pry',
          'Elixir.IEx.Server','Elixir.IEx.State']},
     {progress,modules_loaded},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$ROOT/lib/kernel-6.4/ebin","$ROOT/lib/stdlib-3.9/ebin",
          "$ROOT/lib/compiler-7.4/ebin","$RELEASE_LIB/elixir-1.9.1/ebin",
          "$ROOT/lib/sasl-3.4/ebin","$RELEASE_LIB/connection-1.0.4/ebin",
          "$RELEASE_LIB/logger-1.9.1/ebin","$RELEASE_LIB/decimal-1.8.0/ebin",
          "$ROOT/lib/crypto-4.5/ebin","$RELEASE_LIB/db_connection-2.1.1/ebin",
          "$RELEASE_LIB/postgrex-0.15.0/ebin",
          "$RELEASE_LIB/gettext-0.17.0/ebin",
          "$RELEASE_LIB/certifi-2.4.2/ebin",
          "$RELEASE_LIB/ssl_verify_fun-1.1.4/ebin",
          "$ROOT/lib/asn1-5.0.9/ebin",
          "$RELEASE_LIB/unicode_util_compat-0.4.1/ebin",
          "$RELEASE_LIB/idna-6.0.0/ebin","$ROOT/lib/public_key-1.6.7/ebin",
          "$ROOT/lib/ssl-9.3/ebin","$RELEASE_LIB/metrics-1.0.1/ebin",
          "$RELEASE_LIB/mimerl-1.0.2/ebin","$RELEASE_LIB/hackney-1.15.0/ebin",
          "$RELEASE_LIB/tzdata-1.0.1/ebin","$RELEASE_LIB/combine-0.10.0/ebin",
          "$RELEASE_LIB/timex-3.6.1/ebin","$RELEASE_LIB/briefly-0.3.0/ebin",
          "$RELEASE_LIB/puppeteer_pdf-1.0.3/ebin",
          "$RELEASE_LIB/poison-3.1.0/ebin","$RELEASE_LIB/emojix-0.1.2/ebin",
          "$RELEASE_LIB/jason-1.1.2/ebin","$RELEASE_LIB/ecto-3.1.7/ebin",
          "$RELEASE_LIB/telemetry-0.4.0/ebin",
          "$RELEASE_LIB/ecto_sql-3.1.6/ebin",
          "$RELEASE_LIB/maxwell-2.2.3/ebin","$RELEASE_LIB/ex_gram-0.6.0/ebin",
          "$RELEASE_LIB/drinkly-0.1.0/ebin","$RELEASE_LIB/iex-1.9.1/ebin"]},
     {kernelProcess,heart,{heart,start,[]}},
     {kernelProcess,logger,{logger_server,start_link,[]}},
     {kernelProcess,application_controller,
         {application_controller,start,
             [{application,kernel,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"6.4"},
                   {id,[]},
                   {modules,
                       [application,application_controller,application_master,
                        application_starter,auth,code,code_server,dist_util,
                        erl_boot_server,erl_distribution,erl_reply,
                        erl_signal_handler,error_handler,error_logger,file,
                        file_server,file_io_server,global,global_group,
                        global_search,group,group_history,heart,
                        hipe_unified_loader,inet6_tcp,inet6_tcp_dist,
                        inet6_udp,inet6_sctp,inet_config,inet_hosts,
                        inet_gethost_native,inet_tcp_dist,kernel,
                        kernel_config,kernel_refc,local_tcp,local_udp,logger,
                        logger_backend,logger_config,logger_disk_log_h,
                        logger_filters,logger_formatter,logger_h_common,
                        logger_handler_watcher,logger_olp,logger_proxy,
                        logger_server,logger_simple_h,logger_std_h,logger_sup,
                        net_adm,net_kernel,os,ram_file,rpc,user,user_drv,
                        user_sup,disk_log,disk_log_1,disk_log_server,
                        disk_log_sup,dist_ac,erl_ddll,erl_epmd,erts_debug,
                        gen_tcp,gen_udp,gen_sctp,inet,inet_db,inet_dns,
                        inet_parse,inet_res,inet_tcp,inet_udp,inet_sctp,pg2,
                        raw_file_io,raw_file_io_compressed,
                        raw_file_io_deflate,raw_file_io_delayed,
                        raw_file_io_inflate,raw_file_io_list,raw_file_io_raw,
                        seq_trace,standard_error,wrap_log_reader]},
                   {registered,
                       [application_controller,erl_reply,auth,boot_server,
                        code_server,disk_log_server,disk_log_sup,
                        erl_prim_loader,error_logger,file_server_2,
                        fixtable_server,global_group,global_name_server,heart,
                        init,kernel_config,kernel_refc,kernel_sup,logger,
                        logger_handler_watcher,logger_sup,net_kernel,net_sup,
                        rex,user,os_server,ddll_server,erl_epmd,inet_db,pg2]},
                   {applications,[]},
                   {included_applications,[]},
                   {env,
                       [{logger_level,notice},{logger_sasl_compatible,false}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{kernel,[]}}]}]}},
     {progress,init_kernel_started},
     {apply,
         {application,load,
             [{application,stdlib,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"3.9"},
                   {id,[]},
                   {modules,
                       [array,base64,beam_lib,binary,c,calendar,dets,
                        dets_server,dets_sup,dets_utils,dets_v9,dict,digraph,
                        digraph_utils,edlin,edlin_expand,epp,eval_bits,
                        erl_abstract_code,erl_anno,erl_bits,erl_compile,
                        erl_error,erl_eval,erl_expand_records,erl_internal,
                        erl_lint,erl_parse,erl_posix_msg,erl_pp,erl_scan,
                        erl_tar,error_logger_file_h,error_logger_tty_h,
                        escript,ets,file_sorter,filelib,filename,gb_trees,
                        gb_sets,gen,gen_event,gen_fsm,gen_server,gen_statem,
                        io,io_lib,io_lib_format,io_lib_fread,io_lib_pretty,
                        lists,log_mf_h,maps,math,ms_transform,orddict,ordsets,
                        otp_internal,pool,proc_lib,proplists,qlc,qlc_pt,queue,
                        rand,random,re,sets,shell,shell_default,slave,sofs,
                        string,supervisor,supervisor_bridge,sys,timer,unicode,
                        unicode_util,uri_string,win32reg,zip]},
                   {registered,
                       [timer_server,rsh_starter,take_over_monitor,
                        pool_master,dets]},
                   {applications,[kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,compiler,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"7.4"},
                   {id,[]},
                   {modules,
                       [beam_a,beam_asm,beam_block,beam_clean,beam_dict,
                        beam_disasm,beam_except,beam_flatten,beam_jump,
                        beam_kernel_to_ssa,beam_listing,beam_opcodes,
                        beam_peep,beam_ssa,beam_ssa_bsm,beam_ssa_codegen,
                        beam_ssa_dead,beam_ssa_funs,beam_ssa_lint,
                        beam_ssa_opt,beam_ssa_pp,beam_ssa_pre_codegen,
                        beam_ssa_recv,beam_ssa_share,beam_ssa_type,beam_trim,
                        beam_utils,beam_validator,beam_z,cerl,cerl_clauses,
                        cerl_inline,cerl_sets,cerl_trees,compile,core_scan,
                        core_lint,core_parse,core_pp,core_lib,erl_bifs,
                        rec_env,sys_core_alias,sys_core_bsm,sys_core_fold,
                        sys_core_fold_lists,sys_core_inline,
                        sys_pre_attributes,v3_core,v3_kernel,v3_kernel_pp]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,elixir,
                  [{description,"elixir"},
                   {vsn,"1.9.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.Access','Elixir.Agent.Server','Elixir.Agent',
                        'Elixir.Application','Elixir.ArgumentError',
                        'Elixir.ArithmeticError','Elixir.Atom',
                        'Elixir.BadArityError','Elixir.BadBooleanError',
                        'Elixir.BadFunctionError','Elixir.BadMapError',
                        'Elixir.BadStructError','Elixir.Base',
                        'Elixir.Behaviour','Elixir.Bitwise',
                        'Elixir.Calendar.ISO',
                        'Elixir.Calendar.TimeZoneDatabase',
                        'Elixir.Calendar.UTCOnlyTimeZoneDatabase',
                        'Elixir.Calendar','Elixir.CaseClauseError',
                        'Elixir.Code.Formatter','Elixir.Code.Identifier',
                        'Elixir.Code.LoadError','Elixir.Code.Typespec',
                        'Elixir.Code','Elixir.Collectable.BitString',
                        'Elixir.Collectable.File.Stream',
                        'Elixir.Collectable.HashDict',
                        'Elixir.Collectable.HashSet',
                        'Elixir.Collectable.IO.Stream',
                        'Elixir.Collectable.List','Elixir.Collectable.Map',
                        'Elixir.Collectable.MapSet','Elixir.Collectable',
                        'Elixir.CompileError','Elixir.CondClauseError',
                        'Elixir.Config.Provider','Elixir.Config.Reader',
                        'Elixir.Config','Elixir.Date.Range','Elixir.Date',
                        'Elixir.DateTime','Elixir.Dict',
                        'Elixir.DynamicSupervisor','Elixir.Enum.EmptyError',
                        'Elixir.Enum.OutOfBoundsError','Elixir.Enum',
                        'Elixir.Enumerable.Date.Range',
                        'Elixir.Enumerable.File.Stream',
                        'Elixir.Enumerable.Function',
                        'Elixir.Enumerable.GenEvent.Stream',
                        'Elixir.Enumerable.HashDict',
                        'Elixir.Enumerable.HashSet',
                        'Elixir.Enumerable.IO.Stream',
                        'Elixir.Enumerable.List','Elixir.Enumerable.Map',
                        'Elixir.Enumerable.MapSet','Elixir.Enumerable.Range',
                        'Elixir.Enumerable.Stream','Elixir.Enumerable',
                        'Elixir.ErlangError','Elixir.Exception',
                        'Elixir.File.CopyError','Elixir.File.Error',
                        'Elixir.File.LinkError','Elixir.File.RenameError',
                        'Elixir.File.Stat','Elixir.File.Stream','Elixir.File',
                        'Elixir.Float','Elixir.Function',
                        'Elixir.FunctionClauseError','Elixir.GenEvent.Stream',
                        'Elixir.GenEvent','Elixir.GenServer',
                        'Elixir.HashDict','Elixir.HashSet',
                        'Elixir.IO.ANSI.Docs','Elixir.IO.ANSI.Sequence',
                        'Elixir.IO.ANSI','Elixir.IO.Stream',
                        'Elixir.IO.StreamError','Elixir.IO',
                        'Elixir.Inspect.Algebra','Elixir.Inspect.Any',
                        'Elixir.Inspect.Atom','Elixir.Inspect.BitString',
                        'Elixir.Inspect.Date.Range','Elixir.Inspect.Date',
                        'Elixir.Inspect.DateTime','Elixir.Inspect.Error',
                        'Elixir.Inspect.Float','Elixir.Inspect.Function',
                        'Elixir.Inspect.HashDict','Elixir.Inspect.HashSet',
                        'Elixir.Inspect.Integer','Elixir.Inspect.List',
                        'Elixir.Inspect.Map','Elixir.Inspect.MapSet',
                        'Elixir.Inspect.NaiveDateTime','Elixir.Inspect.Opts',
                        'Elixir.Inspect.PID','Elixir.Inspect.Port',
                        'Elixir.Inspect.Range','Elixir.Inspect.Reference',
                        'Elixir.Inspect.Regex','Elixir.Inspect.Stream',
                        'Elixir.Inspect.Time','Elixir.Inspect.Tuple',
                        'Elixir.Inspect.Version.Requirement',
                        'Elixir.Inspect.Version','Elixir.Inspect',
                        'Elixir.Integer','Elixir.Kernel.CLI',
                        'Elixir.Kernel.ErrorHandler',
                        'Elixir.Kernel.LexicalTracker',
                        'Elixir.Kernel.ParallelCompiler',
                        'Elixir.Kernel.ParallelRequire',
                        'Elixir.Kernel.SpecialForms','Elixir.Kernel.Typespec',
                        'Elixir.Kernel.Utils','Elixir.Kernel',
                        'Elixir.KeyError','Elixir.Keyword',
                        'Elixir.List.Chars.Atom',
                        'Elixir.List.Chars.BitString',
                        'Elixir.List.Chars.Float','Elixir.List.Chars.Integer',
                        'Elixir.List.Chars.List','Elixir.List.Chars',
                        'Elixir.List','Elixir.Macro.Env','Elixir.Macro',
                        'Elixir.Map','Elixir.MapSet','Elixir.MatchError',
                        'Elixir.Module.LocalsTracker','Elixir.Module',
                        'Elixir.NaiveDateTime','Elixir.Node',
                        'Elixir.OptionParser.ParseError',
                        'Elixir.OptionParser','Elixir.Path.Wildcard',
                        'Elixir.Path','Elixir.Port','Elixir.Process',
                        'Elixir.Protocol.UndefinedError','Elixir.Protocol',
                        'Elixir.Range','Elixir.Record.Extractor',
                        'Elixir.Record','Elixir.Regex.CompileError',
                        'Elixir.Regex','Elixir.Registry.Partition',
                        'Elixir.Registry.Supervisor','Elixir.Registry',
                        'Elixir.RuntimeError','Elixir.Set',
                        'Elixir.Stream.Reducers','Elixir.Stream',
                        'Elixir.String.Break','Elixir.String.Casing',
                        'Elixir.String.Chars.Atom',
                        'Elixir.String.Chars.BitString',
                        'Elixir.String.Chars.Date',
                        'Elixir.String.Chars.DateTime',
                        'Elixir.String.Chars.Float',
                        'Elixir.String.Chars.Integer',
                        'Elixir.String.Chars.List',
                        'Elixir.String.Chars.NaiveDateTime',
                        'Elixir.String.Chars.Time','Elixir.String.Chars.URI',
                        'Elixir.String.Chars.Version.Requirement',
                        'Elixir.String.Chars.Version','Elixir.String.Chars',
                        'Elixir.String.Tokenizer','Elixir.String.Unicode',
                        'Elixir.String','Elixir.StringIO',
                        'Elixir.Supervisor.Default','Elixir.Supervisor.Spec',
                        'Elixir.Supervisor','Elixir.SyntaxError',
                        'Elixir.System','Elixir.SystemLimitError',
                        'Elixir.Task.Supervised','Elixir.Task.Supervisor',
                        'Elixir.Task','Elixir.Time',
                        'Elixir.TokenMissingError','Elixir.TryClauseError',
                        'Elixir.Tuple','Elixir.URI',
                        'Elixir.UndefinedFunctionError',
                        'Elixir.UnicodeConversionError',
                        'Elixir.Version.InvalidRequirementError',
                        'Elixir.Version.InvalidVersionError',
                        'Elixir.Version.Parser','Elixir.Version.Requirement',
                        'Elixir.Version','Elixir.WithClauseError',elixir,
                        elixir_aliases,elixir_bitstring,elixir_bootstrap,
                        elixir_clauses,elixir_code_server,elixir_compiler,
                        elixir_config,elixir_def,elixir_dispatch,elixir_env,
                        elixir_erl,elixir_erl_clauses,elixir_erl_compiler,
                        elixir_erl_for,elixir_erl_pass,elixir_erl_try,
                        elixir_erl_var,elixir_errors,elixir_expand,elixir_fn,
                        elixir_import,elixir_interpolation,elixir_lexical,
                        elixir_locals,elixir_map,elixir_module,
                        elixir_overridable,elixir_parser,elixir_quote,
                        elixir_rewrite,elixir_sup,elixir_tokenizer,
                        elixir_utils]},
                   {registered,[elixir_sup,elixir_config,elixir_code_server]},
                   {applications,[kernel,stdlib,compiler]},
                   {included_applications,[]},
                   {env,
                       [{check_endianness,true},
                        {ansi_enabled,false},
                        {time_zone_database,
                            'Elixir.Calendar.UTCOnlyTimeZoneDatabase'}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{elixir,[]}}]}]}},
     {apply,
         {application,load,
             [{application,sasl,
                  [{description,"SASL  CXC 138 11"},
                   {vsn,"3.4"},
                   {id,[]},
                   {modules,
                       [sasl,alarm_handler,format_lib_supp,misc_supp,rb,
                        rb_format_supp,release_handler,release_handler_1,
                        erlsrv,sasl_report,sasl_report_tty_h,
                        sasl_report_file_h,systools,systools_make,systools_rc,
                        systools_relup,systools_lib]},
                   {registered,[sasl_sup,alarm_handler,release_handler]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{sasl,[]}}]}]}},
     {apply,
         {application,load,
             [{application,connection,
                  [{description,
                       "Connection behaviour for connection processes\n"},
                   {vsn,"1.0.4"},
                   {id,[]},
                   {modules,['Elixir.Connection']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,logger,
                  [{description,"logger"},
                   {vsn,"1.9.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.Logger','Elixir.Logger.App',
                        'Elixir.Logger.BackendSupervisor',
                        'Elixir.Logger.Backends.Console',
                        'Elixir.Logger.Config','Elixir.Logger.ErlangHandler',
                        'Elixir.Logger.ErrorHandler',
                        'Elixir.Logger.Formatter','Elixir.Logger.Translator',
                        'Elixir.Logger.Utils','Elixir.Logger.Watcher']},
                   {registered,
                       ['Elixir.Logger','Elixir.Logger.BackendSupervisor',
                        'Elixir.Logger.Supervisor','Elixir.Logger.Watcher']},
                   {applications,[kernel,stdlib,elixir]},
                   {included_applications,[]},
                   {env,
                       [{level,debug},
                        {utc_log,false},
                        {truncate,8096},
                        {backends,[console]},
                        {translators,[{'Elixir.Logger.Translator',translate}]},
                        {sync_threshold,20},
                        {discard_threshold,500},
                        {handle_otp_reports,true},
                        {handle_sasl_reports,false},
                        {discard_threshold_periodic_check,30000},
                        {discard_threshold_for_error_logger,500},
                        {compile_time_purge_level,debug},
                        {compile_time_purge_matching,[]},
                        {compile_time_application,nil},
                        {translator_inspect_opts,[]},
                        {console,[]}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Logger.App',[]}}]}]}},
     {apply,
         {application,load,
             [{application,decimal,
                  [{description,"Arbitrary precision decimal arithmetic."},
                   {vsn,"1.8.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Decimal','Elixir.Decimal.Context',
                        'Elixir.Decimal.Error','Elixir.Decimal.Macros',
                        'Elixir.Inspect.Decimal',
                        'Elixir.String.Chars.Decimal']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,crypto,
                  [{description,"CRYPTO"},
                   {vsn,"4.5"},
                   {id,[]},
                   {modules,[crypto,crypto_ec_curves]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[{fips_mode,false},{rand_cache_size,896}]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,db_connection,
                  [{description,
                       "Database connection behaviour for database transactions and connection pooling\n"},
                   {vsn,"2.1.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.DBConnection','Elixir.DBConnection.App',
                        'Elixir.DBConnection.Backoff',
                        'Elixir.DBConnection.Connection',
                        'Elixir.DBConnection.ConnectionError',
                        'Elixir.DBConnection.ConnectionPool',
                        'Elixir.DBConnection.ConnectionPool.Pool',
                        'Elixir.DBConnection.EncodeError',
                        'Elixir.DBConnection.Holder',
                        'Elixir.DBConnection.LogEntry',
                        'Elixir.DBConnection.Ownership',
                        'Elixir.DBConnection.Ownership.Manager',
                        'Elixir.DBConnection.Ownership.Proxy',
                        'Elixir.DBConnection.OwnershipError',
                        'Elixir.DBConnection.PrepareStream',
                        'Elixir.DBConnection.Query',
                        'Elixir.DBConnection.Stream',
                        'Elixir.DBConnection.Task',
                        'Elixir.DBConnection.TransactionError',
                        'Elixir.DBConnection.Watcher',
                        'Elixir.Enumerable.DBConnection.PrepareStream',
                        'Elixir.Enumerable.DBConnection.Stream']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,connection,logger]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.DBConnection.App',[]}}]}]}},
     {apply,
         {application,load,
             [{application,postgrex,
                  [{description,"PostgreSQL driver for Elixir"},
                   {vsn,"0.15.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Collectable.Postgrex.Stream',
                        'Elixir.DBConnection.Query.Postgrex.Copy',
                        'Elixir.DBConnection.Query.Postgrex.Parameters',
                        'Elixir.DBConnection.Query.Postgrex.Query',
                        'Elixir.Enumerable.Postgrex.Stream','Elixir.Postgrex',
                        'Elixir.Postgrex.App',
                        'Elixir.Postgrex.BinaryExtension',
                        'Elixir.Postgrex.BinaryUtils','Elixir.Postgrex.Box',
                        'Elixir.Postgrex.Circle','Elixir.Postgrex.Copy',
                        'Elixir.Postgrex.Cursor',
                        'Elixir.Postgrex.DefaultTypes',
                        'Elixir.Postgrex.Error','Elixir.Postgrex.ErrorCode',
                        'Elixir.Postgrex.Extension',
                        'Elixir.Postgrex.Extensions.Array',
                        'Elixir.Postgrex.Extensions.BitString',
                        'Elixir.Postgrex.Extensions.Bool',
                        'Elixir.Postgrex.Extensions.Box',
                        'Elixir.Postgrex.Extensions.Circle',
                        'Elixir.Postgrex.Extensions.Date',
                        'Elixir.Postgrex.Extensions.Float4',
                        'Elixir.Postgrex.Extensions.Float8',
                        'Elixir.Postgrex.Extensions.HStore',
                        'Elixir.Postgrex.Extensions.INET',
                        'Elixir.Postgrex.Extensions.Int2',
                        'Elixir.Postgrex.Extensions.Int4',
                        'Elixir.Postgrex.Extensions.Int8',
                        'Elixir.Postgrex.Extensions.Interval',
                        'Elixir.Postgrex.Extensions.JSON',
                        'Elixir.Postgrex.Extensions.JSONB',
                        'Elixir.Postgrex.Extensions.Line',
                        'Elixir.Postgrex.Extensions.LineSegment',
                        'Elixir.Postgrex.Extensions.MACADDR',
                        'Elixir.Postgrex.Extensions.Name',
                        'Elixir.Postgrex.Extensions.Numeric',
                        'Elixir.Postgrex.Extensions.OID',
                        'Elixir.Postgrex.Extensions.Path',
                        'Elixir.Postgrex.Extensions.Point',
                        'Elixir.Postgrex.Extensions.Polygon',
                        'Elixir.Postgrex.Extensions.Range',
                        'Elixir.Postgrex.Extensions.Raw',
                        'Elixir.Postgrex.Extensions.Record',
                        'Elixir.Postgrex.Extensions.TID',
                        'Elixir.Postgrex.Extensions.TSVector',
                        'Elixir.Postgrex.Extensions.Time',
                        'Elixir.Postgrex.Extensions.TimeTZ',
                        'Elixir.Postgrex.Extensions.Timestamp',
                        'Elixir.Postgrex.Extensions.TimestampTZ',
                        'Elixir.Postgrex.Extensions.UUID',
                        'Elixir.Postgrex.Extensions.VoidBinary',
                        'Elixir.Postgrex.Extensions.VoidText',
                        'Elixir.Postgrex.INET','Elixir.Postgrex.Interval',
                        'Elixir.Postgrex.Lexeme','Elixir.Postgrex.Line',
                        'Elixir.Postgrex.LineSegment',
                        'Elixir.Postgrex.MACADDR','Elixir.Postgrex.Messages',
                        'Elixir.Postgrex.Notifications',
                        'Elixir.Postgrex.Parameters','Elixir.Postgrex.Path',
                        'Elixir.Postgrex.Point','Elixir.Postgrex.Polygon',
                        'Elixir.Postgrex.Protocol','Elixir.Postgrex.Query',
                        'Elixir.Postgrex.QueryError','Elixir.Postgrex.Range',
                        'Elixir.Postgrex.Result','Elixir.Postgrex.SCRAM',
                        'Elixir.Postgrex.Stream',
                        'Elixir.Postgrex.SuperExtension',
                        'Elixir.Postgrex.TypeInfo',
                        'Elixir.Postgrex.TypeModule',
                        'Elixir.Postgrex.TypeServer',
                        'Elixir.Postgrex.TypeSupervisor',
                        'Elixir.Postgrex.Types','Elixir.Postgrex.Utils',
                        'Elixir.String.Chars.Postgrex.Copy',
                        'Elixir.String.Chars.Postgrex.Query']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,connection,logger,decimal,crypto,
                        db_connection]},
                   {included_applications,[]},
                   {env,
                       [{type_server_reap_after,180000},
                        {json_library,'Elixir.Jason'}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Postgrex.App',[]}}]}]}},
     {apply,
         {application,load,
             [{application,gettext,
                  [{description,
                       "Internationalization and localization through gettext"},
                   {vsn,"0.17.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Gettext','Elixir.Gettext.Application',
                        'Elixir.Gettext.Backend','Elixir.Gettext.Compiler',
                        'Elixir.Gettext.Error','Elixir.Gettext.Extractor',
                        'Elixir.Gettext.ExtractorAgent',
                        'Elixir.Gettext.Fuzzy','Elixir.Gettext.Interpolation',
                        'Elixir.Gettext.Merger',
                        'Elixir.Gettext.MissingBindingsError',
                        'Elixir.Gettext.PO','Elixir.Gettext.PO.Parser',
                        'Elixir.Gettext.PO.PluralTranslation',
                        'Elixir.Gettext.PO.SyntaxError',
                        'Elixir.Gettext.PO.Tokenizer',
                        'Elixir.Gettext.PO.Translation',
                        'Elixir.Gettext.PO.Translations',
                        'Elixir.Gettext.Plural',
                        'Elixir.Gettext.Plural.UnknownLocaleError',
                        'Elixir.Mix.Tasks.Compile.Gettext',
                        'Elixir.Mix.Tasks.Gettext.Extract',
                        'Elixir.Mix.Tasks.Gettext.Merge',gettext_po_parser]},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger]},
                   {included_applications,[]},
                   {env,[{default_locale,<<"en">>}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Gettext.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,certifi,
                  [{description,
                       "CA bundle adapted from Mozilla by http://certifi.io"},
                   {vsn,"2.4.2"},
                   {id,[]},
                   {modules,[certifi]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ssl_verify_fun,
                  [{description,"SSL verification functions for Erlang\n"},
                   {vsn,"1.1.4"},
                   {id,[]},
                   {modules,
                       [ssl_verify_fingerprint,ssl_verify_fun_cert_helpers,
                        ssl_verify_fun_encodings,ssl_verify_hostname,
                        ssl_verify_pk,ssl_verify_string,ssl_verify_util]},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,asn1,
                  [{description,"The Erlang ASN1 compiler version 5.0.9"},
                   {vsn,"5.0.9"},
                   {id,[]},
                   {modules,[asn1rt_nif]},
                   {registered,[asn1_ns,asn1db]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,unicode_util_compat,
                  [{description,
                       "unicode_util compatibility library for Erlang < 20"},
                   {vsn,"0.4.1"},
                   {id,[]},
                   {modules,[unicode_util_compat]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,idna,
                  [{description,"A pure Erlang IDNA implementation"},
                   {vsn,"6.0.0"},
                   {id,[]},
                   {modules,
                       [idna,idna_bidi,idna_context,idna_data,idna_mapping,
                        idna_table,idna_ucs,punycode]},
                   {registered,[]},
                   {applications,[kernel,stdlib,unicode_util_compat]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,public_key,
                  [{description,"Public key infrastructure"},
                   {vsn,"1.6.7"},
                   {id,[]},
                   {modules,
                       [public_key,pubkey_pem,pubkey_pbe,pubkey_ssh,
                        pubkey_cert,pubkey_cert_records,pubkey_crl,
                        'OTP-PUB-KEY','PKCS-FRAME']},
                   {registered,[]},
                   {applications,[kernel,stdlib,asn1,crypto]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ssl,
                  [{description,"Erlang/OTP SSL application"},
                   {vsn,"9.3"},
                   {id,[]},
                   {modules,
                       [tls_connection,tls_connection_1_3,tls_handshake,
                        tls_handshake_1_3,tls_record,tls_record_1_3,
                        tls_socket,tls_v1,ssl_v3,tls_connection_sup,
                        tls_sender,ssl_dh_groups,dtls_connection,
                        dtls_handshake,dtls_record,dtls_socket,dtls_v1,
                        dtls_connection_sup,dtls_packet_demux,
                        dtls_listener_sup,ssl,ssl_session_cache_api,
                        ssl_config,ssl_connection,ssl_handshake,ssl_record,
                        ssl_cipher,ssl_cipher_format,ssl_srp_primes,ssl_alert,
                        ssl_listen_tracker_sup,inet_tls_dist,inet6_tls_dist,
                        ssl_dist_sup,ssl_dist_connection_sup,
                        ssl_dist_admin_sup,ssl_session,ssl_session_cache,
                        ssl_manager,ssl_pem_cache,ssl_pkix_db,ssl_certificate,
                        ssl_crl,ssl_crl_cache,ssl_crl_cache_api,
                        ssl_crl_hash_dir,ssl_logger,ssl_app,ssl_sup,
                        ssl_admin_sup,ssl_connection_sup]},
                   {registered,[ssl_sup,ssl_manager]},
                   {applications,[kernel,stdlib,crypto,public_key]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{ssl_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,metrics,
                  [{description,
                       "A generic interface to different metrics systems in Erlang."},
                   {vsn,"1.0.1"},
                   {id,[]},
                   {modules,
                       [metrics,metrics_dummy,metrics_exometer,
                        metrics_folsom]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,mimerl,
                  [{description,"An OTP library"},
                   {vsn,"1.0.2"},
                   {id,[]},
                   {modules,[mimerl]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,hackney,
                  [{description,"simple HTTP client"},
                   {vsn,"1.15.0"},
                   {id,[]},
                   {modules,
                       [hackney,hackney_app,hackney_bstr,hackney_connect,
                        hackney_cookie,hackney_date,hackney_headers,
                        hackney_headers_new,hackney_http,hackney_http_connect,
                        hackney_local_tcp,hackney_manager,hackney_metrics,
                        hackney_multipart,hackney_pool,hackney_pool_handler,
                        hackney_request,hackney_response,hackney_socks5,
                        hackney_ssl,hackney_stream,hackney_sup,hackney_tcp,
                        hackney_trace,hackney_url,hackney_util]},
                   {registered,[hackney_pool]},
                   {applications,
                       [kernel,stdlib,certifi,ssl_verify_fun,asn1,idna,ssl,
                        metrics,crypto,public_key,mimerl]},
                   {included_applications,[]},
                   {env,
                       [{timeout,150000},
                        {max_connections,50},
                        {restart,permanent},
                        {shutdown,10000},
                        {maxr,10},
                        {maxt,1}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{hackney_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,tzdata,
                  [{description,
                       "Tzdata is a parser and library for the tz database.\n"},
                   {vsn,"1.0.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.Tzdata','Elixir.Tzdata.App',
                        'Elixir.Tzdata.BasicDataMap',
                        'Elixir.Tzdata.DataBuilder',
                        'Elixir.Tzdata.DataLoader','Elixir.Tzdata.EtsHolder',
                        'Elixir.Tzdata.FarFutureDynamicPeriods',
                        'Elixir.Tzdata.LeapSecParser','Elixir.Tzdata.Parser',
                        'Elixir.Tzdata.ParserOrganizer',
                        'Elixir.Tzdata.PeriodBuilder',
                        'Elixir.Tzdata.ReleaseReader',
                        'Elixir.Tzdata.ReleaseUpdater',
                        'Elixir.Tzdata.TimeZoneDatabase',
                        'Elixir.Tzdata.Util']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,hackney,logger]},
                   {included_applications,[]},
                   {env,[{autoupdate,enabled},{data_dir,nil}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Tzdata.App',[]}}]}]}},
     {apply,
         {application,load,
             [{application,combine,
                  [{description,
                       "A parser combinator library for Elixir projects."},
                   {vsn,"0.10.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Combine','Elixir.Combine.Helpers',
                        'Elixir.Combine.ParserState',
                        'Elixir.Combine.Parsers.Base',
                        'Elixir.Combine.Parsers.Binary',
                        'Elixir.Combine.Parsers.Text']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,timex,
                  [{description,
                       "Timex is a rich, comprehensive Date/Time library for Elixir projects, with full timezone support via the :tzdata package.\nIf you need to manipulate dates, times, datetimes, timestamps, etc., then Timex is for you!\n"},
                   {vsn,"3.6.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.Enumerable.Timex.Interval',
                        'Elixir.Inspect.Timex.AmbiguousDateTime',
                        'Elixir.Inspect.Timex.AmbiguousTimezoneInfo',
                        'Elixir.Inspect.Timex.Duration',
                        'Elixir.Inspect.Timex.TimezoneInfo','Elixir.Timex',
                        'Elixir.Timex.AmbiguousDateTime',
                        'Elixir.Timex.AmbiguousTimezoneInfo',
                        'Elixir.Timex.Calendar.Julian',
                        'Elixir.Timex.Comparable',
                        'Elixir.Timex.Comparable.Date',
                        'Elixir.Timex.Comparable.DateTime',
                        'Elixir.Timex.Comparable.Diff',
                        'Elixir.Timex.Comparable.NaiveDateTime',
                        'Elixir.Timex.Comparable.Timex.AmbiguousDateTime',
                        'Elixir.Timex.Comparable.Tuple',
                        'Elixir.Timex.Comparable.Utils',
                        'Elixir.Timex.Constants','Elixir.Timex.Convert',
                        'Elixir.Timex.ConvertError',
                        'Elixir.Timex.DateTime.Helpers',
                        'Elixir.Timex.Duration',
                        'Elixir.Timex.Format.DateTime.Formatter',
                        'Elixir.Timex.Format.DateTime.Formatters.Default',
                        'Elixir.Timex.Format.DateTime.Formatters.Relative',
                        'Elixir.Timex.Format.DateTime.Formatters.Strftime',
                        'Elixir.Timex.Format.Duration.Formatter',
                        'Elixir.Timex.Format.Duration.Formatters.Default',
                        'Elixir.Timex.Format.Duration.Formatters.Humanized',
                        'Elixir.Timex.Format.FormatError',
                        'Elixir.Timex.Gettext','Elixir.Timex.Helpers',
                        'Elixir.Timex.Interval',
                        'Elixir.Timex.Interval.FormatError',
                        'Elixir.Timex.Macros',
                        'Elixir.Timex.Parse.DateTime.Helpers',
                        'Elixir.Timex.Parse.DateTime.Parser',
                        'Elixir.Timex.Parse.DateTime.Parsers',
                        'Elixir.Timex.Parse.DateTime.Parsers.ISO8601Extended',
                        'Elixir.Timex.Parse.DateTime.Tokenizer',
                        'Elixir.Timex.Parse.DateTime.Tokenizers.Default',
                        'Elixir.Timex.Parse.DateTime.Tokenizers.Directive',
                        'Elixir.Timex.Parse.DateTime.Tokenizers.Strftime',
                        'Elixir.Timex.Parse.Duration.Parser',
                        'Elixir.Timex.Parse.Duration.Parsers.ISO8601Parser',
                        'Elixir.Timex.Parse.ParseError',
                        'Elixir.Timex.Parse.Timezones.Posix',
                        'Elixir.Timex.Parse.Timezones.Posix.PosixTimezone',
                        'Elixir.Timex.Parse.ZoneInfo.Parser',
                        'Elixir.Timex.Parse.ZoneInfo.Parser.Header',
                        'Elixir.Timex.Parse.ZoneInfo.Parser.LeapSecond',
                        'Elixir.Timex.Parse.ZoneInfo.Parser.TransitionInfo',
                        'Elixir.Timex.Parse.ZoneInfo.Parser.Zone',
                        'Elixir.Timex.Protocol','Elixir.Timex.Protocol.Any',
                        'Elixir.Timex.Protocol.Date',
                        'Elixir.Timex.Protocol.DateTime',
                        'Elixir.Timex.Protocol.Map',
                        'Elixir.Timex.Protocol.NaiveDateTime',
                        'Elixir.Timex.Protocol.Tuple','Elixir.Timex.Time',
                        'Elixir.Timex.Timezone','Elixir.Timex.Timezone.Local',
                        'Elixir.Timex.Timezone.Utils',
                        'Elixir.Timex.TimezoneInfo','Elixir.Timex.Translator',
                        'Elixir.Timex.Types']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,gettext,tzdata,logger,combine]},
                   {included_applications,[]},
                   {env,[{local_timezone,nil},{default_locale,<<"en">>}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Timex',[]}}]}]}},
     {apply,
         {application,load,
             [{application,briefly,
                  [{description,"briefly"},
                   {vsn,"0.3.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Briefly','Elixir.Briefly.Config',
                        'Elixir.Briefly.Entry','Elixir.Briefly.Supervisor']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger]},
                   {included_applications,[]},
                   {env,
                       [{directory,
                            [{system,<<"TMPDIR">>},
                             {system,<<"TMP">>},
                             {system,<<"TEMP">>},
                             <<"/tmp">>]},
                        {default_prefix,<<"briefly">>},
                        {default_extname,<<>>}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Briefly',[]}}]}]}},
     {apply,
         {application,load,
             [{application,puppeteer_pdf,
                  [{description,
                       "Wrapper for Puppeteer-pdf, a node module that use Puppeteer to convert\nHTML pages to PDF.\n"},
                   {vsn,"1.0.3"},
                   {id,[]},
                   {modules,
                       ['Elixir.CommandHelper','Elixir.PuppeteerPdf',
                        'Elixir.PuppeteerPdf.Generate']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,briefly,logger]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,poison,
                  [{description,
                       "An incredibly fast, pure Elixir JSON library"},
                   {vsn,"3.1.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Poison','Elixir.Poison.Decode',
                        'Elixir.Poison.Decoder','Elixir.Poison.Decoder.Any',
                        'Elixir.Poison.Encode','Elixir.Poison.EncodeError',
                        'Elixir.Poison.Encoder','Elixir.Poison.Encoder.Any',
                        'Elixir.Poison.Encoder.Atom',
                        'Elixir.Poison.Encoder.BitString',
                        'Elixir.Poison.Encoder.Date',
                        'Elixir.Poison.Encoder.DateTime',
                        'Elixir.Poison.Encoder.Float',
                        'Elixir.Poison.Encoder.HashSet',
                        'Elixir.Poison.Encoder.Integer',
                        'Elixir.Poison.Encoder.List',
                        'Elixir.Poison.Encoder.Map',
                        'Elixir.Poison.Encoder.MapSet',
                        'Elixir.Poison.Encoder.NaiveDateTime',
                        'Elixir.Poison.Encoder.Range',
                        'Elixir.Poison.Encoder.Stream',
                        'Elixir.Poison.Encoder.Time','Elixir.Poison.Parser',
                        'Elixir.Poison.Pretty','Elixir.Poison.SyntaxError']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,emojix,
                  [{description,
                       [65,110,32,101,108,105,120,105,114,32,108,105,98,114,
                        97,114,121,32,116,104,97,116,32,99,111,110,118,101,
                        114,116,115,32,101,109,111,106,105,32,105,110,32,99,
                        104,97,114,32,111,114,32,115,118,103,46,32,128169,10]},
                   {vsn,"0.1.2"},
                   {id,[]},
                   {modules,
                       ['Elixir.Emojix','Elixir.Emojix.Emoji',
                        'Elixir.Mix.Tasks.Emojix.Install']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,poison]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,jason,
                  [{description,
                       "A blazing fast JSON parser and generator in pure Elixir.\n"},
                   {vsn,"1.1.2"},
                   {id,[]},
                   {modules,
                       ['Elixir.Jason','Elixir.Jason.Codegen',
                        'Elixir.Jason.DecodeError','Elixir.Jason.Decoder',
                        'Elixir.Jason.Decoder.Unescape','Elixir.Jason.Encode',
                        'Elixir.Jason.EncodeError','Elixir.Jason.Encoder',
                        'Elixir.Jason.Encoder.Any',
                        'Elixir.Jason.Encoder.Atom',
                        'Elixir.Jason.Encoder.BitString',
                        'Elixir.Jason.Encoder.Date',
                        'Elixir.Jason.Encoder.DateTime',
                        'Elixir.Jason.Encoder.Decimal',
                        'Elixir.Jason.Encoder.Float',
                        'Elixir.Jason.Encoder.Integer',
                        'Elixir.Jason.Encoder.Jason.Fragment',
                        'Elixir.Jason.Encoder.List',
                        'Elixir.Jason.Encoder.Map',
                        'Elixir.Jason.Encoder.NaiveDateTime',
                        'Elixir.Jason.Encoder.Time','Elixir.Jason.Formatter',
                        'Elixir.Jason.Fragment','Elixir.Jason.Helpers']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ecto,
                  [{description,
                       "A toolkit for data mapping and language integrated query for Elixir"},
                   {vsn,"3.1.7"},
                   {id,[]},
                   {modules,
                       ['Elixir.Ecto','Elixir.Ecto.Adapter',
                        'Elixir.Ecto.Adapter.Queryable',
                        'Elixir.Ecto.Adapter.Schema',
                        'Elixir.Ecto.Adapter.Storage',
                        'Elixir.Ecto.Adapter.Transaction',
                        'Elixir.Ecto.Application','Elixir.Ecto.Association',
                        'Elixir.Ecto.Association.BelongsTo',
                        'Elixir.Ecto.Association.Has',
                        'Elixir.Ecto.Association.HasThrough',
                        'Elixir.Ecto.Association.ManyToMany',
                        'Elixir.Ecto.Association.NotLoaded',
                        'Elixir.Ecto.CastError','Elixir.Ecto.ChangeError',
                        'Elixir.Ecto.Changeset',
                        'Elixir.Ecto.Changeset.Relation',
                        'Elixir.Ecto.ConstraintError','Elixir.Ecto.Embedded',
                        'Elixir.Ecto.InvalidChangesetError',
                        'Elixir.Ecto.InvalidURLError','Elixir.Ecto.LogEntry',
                        'Elixir.Ecto.MigrationError','Elixir.Ecto.Multi',
                        'Elixir.Ecto.MultiplePrimaryKeyError',
                        'Elixir.Ecto.MultipleResultsError',
                        'Elixir.Ecto.NoPrimaryKeyFieldError',
                        'Elixir.Ecto.NoPrimaryKeyValueError',
                        'Elixir.Ecto.NoResultsError','Elixir.Ecto.Query',
                        'Elixir.Ecto.Query.API',
                        'Elixir.Ecto.Query.BooleanExpr',
                        'Elixir.Ecto.Query.Builder',
                        'Elixir.Ecto.Query.Builder.Combination',
                        'Elixir.Ecto.Query.Builder.Distinct',
                        'Elixir.Ecto.Query.Builder.Dynamic',
                        'Elixir.Ecto.Query.Builder.Filter',
                        'Elixir.Ecto.Query.Builder.From',
                        'Elixir.Ecto.Query.Builder.GroupBy',
                        'Elixir.Ecto.Query.Builder.Join',
                        'Elixir.Ecto.Query.Builder.LimitOffset',
                        'Elixir.Ecto.Query.Builder.Lock',
                        'Elixir.Ecto.Query.Builder.OrderBy',
                        'Elixir.Ecto.Query.Builder.Preload',
                        'Elixir.Ecto.Query.Builder.Select',
                        'Elixir.Ecto.Query.Builder.Update',
                        'Elixir.Ecto.Query.Builder.Windows',
                        'Elixir.Ecto.Query.CastError',
                        'Elixir.Ecto.Query.CompileError',
                        'Elixir.Ecto.Query.DynamicExpr',
                        'Elixir.Ecto.Query.FromExpr',
                        'Elixir.Ecto.Query.JoinExpr',
                        'Elixir.Ecto.Query.Planner',
                        'Elixir.Ecto.Query.QueryExpr',
                        'Elixir.Ecto.Query.SelectExpr',
                        'Elixir.Ecto.Query.Tagged',
                        'Elixir.Ecto.Query.WindowAPI',
                        'Elixir.Ecto.QueryError','Elixir.Ecto.Queryable',
                        'Elixir.Ecto.Queryable.Atom',
                        'Elixir.Ecto.Queryable.BitString',
                        'Elixir.Ecto.Queryable.Ecto.Query',
                        'Elixir.Ecto.Queryable.Ecto.SubQuery',
                        'Elixir.Ecto.Queryable.Tuple','Elixir.Ecto.Repo',
                        'Elixir.Ecto.Repo.Assoc','Elixir.Ecto.Repo.Preloader',
                        'Elixir.Ecto.Repo.Queryable',
                        'Elixir.Ecto.Repo.Registry','Elixir.Ecto.Repo.Schema',
                        'Elixir.Ecto.Repo.Supervisor',
                        'Elixir.Ecto.Repo.Transaction','Elixir.Ecto.Schema',
                        'Elixir.Ecto.Schema.Loader',
                        'Elixir.Ecto.Schema.Metadata',
                        'Elixir.Ecto.StaleEntryError','Elixir.Ecto.SubQuery',
                        'Elixir.Ecto.SubQueryError','Elixir.Ecto.Type',
                        'Elixir.Ecto.UUID',
                        'Elixir.Inspect.Ecto.Association.NotLoaded',
                        'Elixir.Inspect.Ecto.Changeset',
                        'Elixir.Inspect.Ecto.Query',
                        'Elixir.Inspect.Ecto.Query.DynamicExpr',
                        'Elixir.Inspect.Ecto.Schema.Metadata',
                        'Elixir.Jason.Encoder.Ecto.Association.NotLoaded',
                        'Elixir.Jason.Encoder.Ecto.Schema.Metadata',
                        'Elixir.Mix.Ecto','Elixir.Mix.Tasks.Ecto',
                        'Elixir.Mix.Tasks.Ecto.Create',
                        'Elixir.Mix.Tasks.Ecto.Drop',
                        'Elixir.Mix.Tasks.Ecto.Gen.Repo']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger,decimal,crypto]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Ecto.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,telemetry,
                  [{description,
                       "Dynamic dispatching library for metrics and instrumentations"},
                   {vsn,"0.4.0"},
                   {id,[]},
                   {modules,
                       [telemetry,telemetry_app,telemetry_handler_table,
                        telemetry_sup]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{telemetry_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,ecto_sql,
                  [{description,
                       "SQL-based adapters for Ecto and database migrations"},
                   {vsn,"3.1.6"},
                   {id,[]},
                   {modules,
                       ['Elixir.Collectable.Ecto.Adapters.SQL.Stream',
                        'Elixir.Ecto.Adapter.Migration',
                        'Elixir.Ecto.Adapter.Structure',
                        'Elixir.Ecto.Adapters.MySQL',
                        'Elixir.Ecto.Adapters.MyXQL',
                        'Elixir.Ecto.Adapters.Postgres',
                        'Elixir.Ecto.Adapters.Postgres.Connection',
                        'Elixir.Ecto.Adapters.SQL',
                        'Elixir.Ecto.Adapters.SQL.Application',
                        'Elixir.Ecto.Adapters.SQL.Connection',
                        'Elixir.Ecto.Adapters.SQL.Sandbox',
                        'Elixir.Ecto.Adapters.SQL.Sandbox.Connection',
                        'Elixir.Ecto.Adapters.SQL.Stream',
                        'Elixir.Ecto.Migration',
                        'Elixir.Ecto.Migration.Command',
                        'Elixir.Ecto.Migration.Constraint',
                        'Elixir.Ecto.Migration.Index',
                        'Elixir.Ecto.Migration.Reference',
                        'Elixir.Ecto.Migration.Runner',
                        'Elixir.Ecto.Migration.SchemaMigration',
                        'Elixir.Ecto.Migration.Supervisor',
                        'Elixir.Ecto.Migration.Table','Elixir.Ecto.Migrator',
                        'Elixir.Enumerable.Ecto.Adapters.SQL.Stream',
                        'Elixir.Mix.EctoSQL','Elixir.Mix.Tasks.Ecto.Dump',
                        'Elixir.Mix.Tasks.Ecto.Gen.Migration',
                        'Elixir.Mix.Tasks.Ecto.Load',
                        'Elixir.Mix.Tasks.Ecto.Migrate',
                        'Elixir.Mix.Tasks.Ecto.Migrations',
                        'Elixir.Mix.Tasks.Ecto.Rollback']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,ecto,telemetry,logger,
                        db_connection]},
                   {included_applications,[]},
                   {env,[{postgres_map_type,<<"jsonb">>}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Ecto.Adapters.SQL.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,maxwell,
                  [{description,"maxwell"},
                   {vsn,"2.2.3"},
                   {id,[]},
                   {modules,
                       ['Elixir.Inspect.Maxwell.Conn','Elixir.Maxwell',
                        'Elixir.Maxwell.Adapter',
                        'Elixir.Maxwell.Adapter.Hackney',
                        'Elixir.Maxwell.Adapter.Httpc',
                        'Elixir.Maxwell.Adapter.Util',
                        'Elixir.Maxwell.Builder',
                        'Elixir.Maxwell.Builder.Adapter',
                        'Elixir.Maxwell.Builder.Middleware',
                        'Elixir.Maxwell.Builder.Util','Elixir.Maxwell.Conn',
                        'Elixir.Maxwell.Conn.AlreadySentError',
                        'Elixir.Maxwell.Conn.NotSentError',
                        'Elixir.Maxwell.Error','Elixir.Maxwell.Middleware',
                        'Elixir.Maxwell.Middleware.BaseUrl',
                        'Elixir.Maxwell.Middleware.DecodeJson',
                        'Elixir.Maxwell.Middleware.EncodeJson',
                        'Elixir.Maxwell.Middleware.HeaderCase',
                        'Elixir.Maxwell.Middleware.Headers',
                        'Elixir.Maxwell.Middleware.Json',
                        'Elixir.Maxwell.Middleware.Logger',
                        'Elixir.Maxwell.Middleware.Opts',
                        'Elixir.Maxwell.Middleware.Rels',
                        'Elixir.Maxwell.Middleware.Retry',
                        'Elixir.Maxwell.Multipart','Elixir.Maxwell.Query']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ex_gram,
                  [{description,"Telegram Bot API low level and framework"},
                   {vsn,"0.6.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.ExGram','Elixir.ExGram.Adapter',
                        'Elixir.ExGram.Adapter.Http',
                        'Elixir.ExGram.Adapter.Test','Elixir.ExGram.Bot',
                        'Elixir.ExGram.Cnt','Elixir.ExGram.Commands',
                        'Elixir.ExGram.Config','Elixir.ExGram.Dispatcher',
                        'Elixir.ExGram.Dsl','Elixir.ExGram.Dsl.Keyboard',
                        'Elixir.ExGram.Encoder',
                        'Elixir.ExGram.Encoder.Engine',
                        'Elixir.ExGram.Encoder.EngineCompiler',
                        'Elixir.ExGram.Error','Elixir.ExGram.File',
                        'Elixir.ExGram.Handler','Elixir.ExGram.Macros',
                        'Elixir.ExGram.Middleware',
                        'Elixir.ExGram.Middleware.Builder',
                        'Elixir.ExGram.Middleware.IgnoreUsername',
                        'Elixir.ExGram.Model','Elixir.ExGram.Model.Animation',
                        'Elixir.ExGram.Model.Audio',
                        'Elixir.ExGram.Model.CallbackGame',
                        'Elixir.ExGram.Model.CallbackQuery',
                        'Elixir.ExGram.Model.Chat',
                        'Elixir.ExGram.Model.ChatMember',
                        'Elixir.ExGram.Model.ChatPhoto',
                        'Elixir.ExGram.Model.ChosenInlineResult',
                        'Elixir.ExGram.Model.Contact',
                        'Elixir.ExGram.Model.Document',
                        'Elixir.ExGram.Model.EncryptedCredentials',
                        'Elixir.ExGram.Model.EncryptedPassportElement',
                        'Elixir.ExGram.Model.File',
                        'Elixir.ExGram.Model.ForceReply',
                        'Elixir.ExGram.Model.Game',
                        'Elixir.ExGram.Model.GameHighScore',
                        'Elixir.ExGram.Model.InlineKeyboardButton',
                        'Elixir.ExGram.Model.InlineKeyboardMarkup',
                        'Elixir.ExGram.Model.InlineQuery',
                        'Elixir.ExGram.Model.InlineQueryResult',
                        'Elixir.ExGram.Model.InlineQueryResultArticle',
                        'Elixir.ExGram.Model.InlineQueryResultAudio',
                        'Elixir.ExGram.Model.InlineQueryResultCachedAudio',
                        'Elixir.ExGram.Model.InlineQueryResultCachedDocument',
                        'Elixir.ExGram.Model.InlineQueryResultCachedGif',
                        'Elixir.ExGram.Model.InlineQueryResultCachedMpeg4Gif',
                        'Elixir.ExGram.Model.InlineQueryResultCachedPhoto',
                        'Elixir.ExGram.Model.InlineQueryResultCachedSticker',
                        'Elixir.ExGram.Model.InlineQueryResultCachedVideo',
                        'Elixir.ExGram.Model.InlineQueryResultCachedVoice',
                        'Elixir.ExGram.Model.InlineQueryResultContact',
                        'Elixir.ExGram.Model.InlineQueryResultDocument',
                        'Elixir.ExGram.Model.InlineQueryResultGame',
                        'Elixir.ExGram.Model.InlineQueryResultGif',
                        'Elixir.ExGram.Model.InlineQueryResultLocation',
                        'Elixir.ExGram.Model.InlineQueryResultMpeg4Gif',
                        'Elixir.ExGram.Model.InlineQueryResultPhoto',
                        'Elixir.ExGram.Model.InlineQueryResultVenue',
                        'Elixir.ExGram.Model.InlineQueryResultVideo',
                        'Elixir.ExGram.Model.InlineQueryResultVoice',
                        'Elixir.ExGram.Model.InputContactMessageContent',
                        'Elixir.ExGram.Model.InputFile',
                        'Elixir.ExGram.Model.InputLocationMessageContent',
                        'Elixir.ExGram.Model.InputMedia',
                        'Elixir.ExGram.Model.InputMediaAnimation',
                        'Elixir.ExGram.Model.InputMediaAudio',
                        'Elixir.ExGram.Model.InputMediaDocument',
                        'Elixir.ExGram.Model.InputMediaPhoto',
                        'Elixir.ExGram.Model.InputMediaVideo',
                        'Elixir.ExGram.Model.InputMessageContent',
                        'Elixir.ExGram.Model.InputTextMessageContent',
                        'Elixir.ExGram.Model.InputVenueMessageContent',
                        'Elixir.ExGram.Model.Invoice',
                        'Elixir.ExGram.Model.KeyboardButton',
                        'Elixir.ExGram.Model.LabeledPrice',
                        'Elixir.ExGram.Model.Location',
                        'Elixir.ExGram.Model.MaskPosition',
                        'Elixir.ExGram.Model.Message',
                        'Elixir.ExGram.Model.MessageEntity',
                        'Elixir.ExGram.Model.OrderInfo',
                        'Elixir.ExGram.Model.PassportData',
                        'Elixir.ExGram.Model.PassportElementError',
                        'Elixir.ExGram.Model.PassportElementErrorDataField',
                        'Elixir.ExGram.Model.PassportElementErrorFile',
                        'Elixir.ExGram.Model.PassportElementErrorFiles',
                        'Elixir.ExGram.Model.PassportElementErrorFrontSide',
                        'Elixir.ExGram.Model.PassportElementErrorReverseSide',
                        'Elixir.ExGram.Model.PassportElementErrorSelfie',
                        'Elixir.ExGram.Model.PassportFile',
                        'Elixir.ExGram.Model.PhotoSize',
                        'Elixir.ExGram.Model.PreCheckoutQuery',
                        'Elixir.ExGram.Model.ReplyKeyboardMarkup',
                        'Elixir.ExGram.Model.ReplyKeyboardRemove',
                        'Elixir.ExGram.Model.ResponseParameters',
                        'Elixir.ExGram.Model.ShippingAddress',
                        'Elixir.ExGram.Model.ShippingOption',
                        'Elixir.ExGram.Model.ShippingQuery',
                        'Elixir.ExGram.Model.Sticker',
                        'Elixir.ExGram.Model.StickerSet',
                        'Elixir.ExGram.Model.SuccessfulPayment',
                        'Elixir.ExGram.Model.Update',
                        'Elixir.ExGram.Model.User',
                        'Elixir.ExGram.Model.UserProfilePhotos',
                        'Elixir.ExGram.Model.Venue',
                        'Elixir.ExGram.Model.Video',
                        'Elixir.ExGram.Model.VideoNote',
                        'Elixir.ExGram.Model.Voice',
                        'Elixir.ExGram.Model.WebhookInfo',
                        'Elixir.ExGram.Responses',
                        'Elixir.ExGram.Responses.Answer',
                        'Elixir.ExGram.Responses.AnswerCallback',
                        'Elixir.ExGram.Responses.AnswerInlineQuery',
                        'Elixir.ExGram.Responses.Atom',
                        'Elixir.ExGram.Responses.DeleteMessage',
                        'Elixir.ExGram.Responses.EditInline',
                        'Elixir.ExGram.Responses.EditMarkup',
                        'Elixir.ExGram.Responses.ExGram.Responses.Answer',
                        'Elixir.ExGram.Responses.ExGram.Responses.AnswerCallback',
                        'Elixir.ExGram.Responses.ExGram.Responses.AnswerInlineQuery',
                        'Elixir.ExGram.Responses.ExGram.Responses.DeleteMessage',
                        'Elixir.ExGram.Responses.ExGram.Responses.EditInline',
                        'Elixir.ExGram.Responses.ExGram.Responses.EditMarkup',
                        'Elixir.ExGram.Token','Elixir.ExGram.Updates.Noup',
                        'Elixir.ExGram.Updates.Polling',
                        'Elixir.ExGram.Updates.Test','Elixir.Examples.Simple',
                        'Elixir.Examples.Sup']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,maxwell,hackney,logger]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,drinkly,
                  [{description,"drinkly"},
                   {vsn,"0.1.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Drinkly','Elixir.Drinkly.Application',
                        'Elixir.Drinkly.Bot','Elixir.Drinkly.CallbackQuery',
                        'Elixir.Drinkly.CommandHandler',
                        'Elixir.Drinkly.Commands','Elixir.Drinkly.Drinks',
                        'Elixir.Drinkly.Drinks.Drink',
                        'Elixir.Drinkly.Exception.InvalidTime',
                        'Elixir.Drinkly.Helper','Elixir.Drinkly.Metrics',
                        'Elixir.Drinkly.Metrics.Metric',
                        'Elixir.Drinkly.Parser','Elixir.Drinkly.Reminder',
                        'Elixir.Drinkly.Repo','Elixir.Drinkly.Texts',
                        'Elixir.Drinkly.Users','Elixir.Drinkly.Users.User',
                        'Elixir.Drinkly.Validator']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,postgrex,timex,puppeteer_pdf,
                        emojix,jason,logger,ecto_sql,ex_gram]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Drinkly.Application',[]}}]}]}},
     {progress,applications_loaded},
     {apply,{application,start_boot,[kernel,permanent]}},
     {apply,{application,start_boot,[stdlib,permanent]}},
     {apply,{'Elixir.Config.Provider',boot,[elixir,config_providers]}},
     {apply,{application,start_boot,[compiler,permanent]}},
     {apply,{application,start_boot,[elixir,permanent]}},
     {apply,{application,start_boot,[sasl,permanent]}},
     {apply,{application,start_boot,[connection,permanent]}},
     {apply,{application,start_boot,[logger,permanent]}},
     {apply,{application,start_boot,[decimal,permanent]}},
     {apply,{application,start_boot,[crypto,permanent]}},
     {apply,{application,start_boot,[db_connection,permanent]}},
     {apply,{application,start_boot,[postgrex,permanent]}},
     {apply,{application,start_boot,[gettext,permanent]}},
     {apply,{application,start_boot,[certifi,permanent]}},
     {apply,{application,start_boot,[ssl_verify_fun,permanent]}},
     {apply,{application,start_boot,[asn1,permanent]}},
     {apply,{application,start_boot,[unicode_util_compat,permanent]}},
     {apply,{application,start_boot,[idna,permanent]}},
     {apply,{application,start_boot,[public_key,permanent]}},
     {apply,{application,start_boot,[ssl,permanent]}},
     {apply,{application,start_boot,[metrics,permanent]}},
     {apply,{application,start_boot,[mimerl,permanent]}},
     {apply,{application,start_boot,[hackney,permanent]}},
     {apply,{application,start_boot,[tzdata,permanent]}},
     {apply,{application,start_boot,[combine,permanent]}},
     {apply,{application,start_boot,[timex,permanent]}},
     {apply,{application,start_boot,[briefly,permanent]}},
     {apply,{application,start_boot,[puppeteer_pdf,permanent]}},
     {apply,{application,start_boot,[poison,permanent]}},
     {apply,{application,start_boot,[emojix,permanent]}},
     {apply,{application,start_boot,[jason,permanent]}},
     {apply,{application,start_boot,[ecto,permanent]}},
     {apply,{application,start_boot,[telemetry,permanent]}},
     {apply,{application,start_boot,[ecto_sql,permanent]}},
     {apply,{application,start_boot,[maxwell,permanent]}},
     {apply,{application,start_boot,[ex_gram,permanent]}},
     {apply,{application,start_boot,[drinkly,permanent]}},
     {progress,started}]}.
